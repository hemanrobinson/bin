{"version":3,"sources":["Data.js","Graph.js","Histogram.js","BarChart.js","Heatmap.js","shneiderman.png","App.js","index.js"],"names":["Data","props","getColumnNames","dataSet","names","getValues","data","Graph","React","forwardRef","ref","buttonSize","width","height","margin","padding","onMouseDown","onMouseUp","onMouseOver","onMouseOut","onZoom","xAggregate","yAggregate","onXAggregate","onYAggregate","top","right","bottom","left","style","className","onMouseMove","Button","variant","onClick","position","minWidth","display","Slider","min","max","step","defaultValue","onChange","orientation","scrollSize","isZooming","current","childNodes","isXBinning","isYBinning","downLocation","x","y","xDomain","yDomain","isX","isY","isMin","isMax","getDomains","xDomain0","yDomain0","isXOrdinal","isYOrdinal","domains","xMin0","xMax0","length","xMin","indexOf","xMax","xD","yMin0","yMax0","yMin","yMax","yD","onZoom2D","isIn","xScale","yScale","f","domain","bandwidth","xDif","yDif","Math","ceil","floor","slice","event","xScrollSize","endCapSize","xDown","nativeEvent","offsetX","yDown","offsetY","preventDefault","w","x0","x1","h","y0","y1","xUp","yUp","dif","round","type","drawAxes","xLabel","yLabel","svg","d3","colorLight","append","attr","call","ticks","tickFormat","t","text","drawControls","isXZooming","isYZooming","halfSize","colorLine","x2","d","k","y2","i","Histogram","histogram","bins","useRef","useState","setXDomain","range","setXAggregate","value","thresholds","exp","useEffect","draw","isBinning","selectAll","remove","enter","bin","BarChart","bars","Array","from","v","sort","a","b","n","total","splice","push","map","yMargin","otherPercent","otherLength","yScale1","maxLength","isOtherLong","yScale2","breakWidth","Heatmap","tiles","values","setYDomain","setYAggregate","forEach","concat","j","nY","colorScale","App","href","alt","src","shneiderman","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNACMA,EAAO,SAAEC,KAIfD,EAAKE,eAAiB,SAAGC,GACrB,IAAIC,EAAQ,GACZ,OAAQD,GACJ,IAAK,WAAYC,EAAQ,CAAE,UAAW,SAAU,mBAAoB,kBAAmB,sBAAuB,gBAAiB,OAAS,MACxI,IAAK,YAAaA,EAAQ,CAAE,UAAW,SAAU,SAAU,QAAS,SAAU,MAAO,MAAO,MAAO,MAAO,YAAc,MACxH,IAAK,OAAQA,EAAQ,CAAE,OAAQ,WAAY,MAAO,gBAAiB,WAAa,MAChF,IAAK,QAASA,EAAQ,CAAE,QAAS,sBAAwB,MACzD,QAASA,EAAQ,CAAE,UAAW,oBAAqB,mBAAoB,oBAAqB,oBAEhG,OAAOA,GAIXJ,EAAKK,UAAY,SAAGF,GAChB,IAAIG,EAAO,GACX,OAAQH,GAMJ,IAAK,WAAYG,EAAO,CACpB,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAE3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,MACvC,CAAE,SAAU,YAAa,GAAG,KAAK,IAAI,MACrC,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,MACvC,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,MACvC,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,GAAG,KAAK,IAAI,KAAM,QAC3C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,QACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,IAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,QACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,MACnC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,IAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,GAAG,GAAG,IAAI,KAAM,QACtC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,IAAM,QAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,YAAa,GAAG,KAAK,IAAI,KAAM,UAC3C,CAAE,SAAU,YAAa,KAAK,GAAG,IAAI,IAAM,QAC3C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,UAC7C,CAAE,SAAU,YAAa,KAAK,KAAK,IAAI,KAAM,QAC7C,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,KAAK,GAAG,IAAI,KAAM,QACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,IAAM,UACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,QACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,UACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,KAAM,QACzC,CAAE,SAAU,QAAS,GAAG,KAAK,IAAI,KAAM,UACvC,CAAE,SAAU,QAAS,KAAK,KAAK,IAAI,IAAM,QACzC,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,UAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,UAC1C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,UAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,GAAG,GAAG,IAAI,KAAM,QACxC,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,UAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,GAAG,KAAK,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,UAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,IAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,QAC5C,CAAE,YAAa,QAAS,KAAK,GAAG,IAAI,KAAM,QAC1C,CAAE,YAAa,QAAS,KAAK,KAAK,IAAI,KAAM,UAC5C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,MACpC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,IAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,IAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,MACpC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,GAAG,KAAK,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,MACpC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,UACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,GAAG,IAAI,KAAM,QACxC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,MACpC,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,IAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAE1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,QAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,UAC1C,CAAE,SAAU,SAAU,KAAK,KAAK,IAAI,KAAM,SAC3C,MAGH,IAAK,YAAaA,EAAO,CACrB,CAAE,GAAI,gBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAkB,gBAAiB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,mBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,mBACxE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,gBAAiB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,EAAG,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,mBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,gBAAiB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,gBAAkB,gBAAiB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,mBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,iBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAoB,eAAgB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,gBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,gBAAiB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,cAAe,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACtE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAiB,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,kBACrE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,iBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,eAAgB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACtE,CAAE,EAAG,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,iBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,eAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,IAAK,EAAG,kBACrE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,IAAK,GAAI,EAAG,kBACrE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,EAAG,EAAG,kBACnE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,kBACtE,CAAE,GAAI,kBAAoB,eAAgB,IAAK,IAAK,GAAI,IAAK,GAAI,EAAG,kBACpE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,kBACtE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,GAAI,IAAK,GAAI,EAAG,kBACtE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,mBACrE,CAAE,GAAI,kBAAmB,gBAAiB,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,kBACrE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,kBACtE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,kBACvE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,kBACtE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,eACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,iBACtE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,kBACrE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,kBACxE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,gBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACxE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,EAAG,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,EAAG,gBAAiB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACtE,CAAE,EAAG,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,EAAG,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,gBACvE,CAAE,EAAG,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,kBACxE,CAAE,GAAI,kBAAmB,gBAAiB,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,kBACvE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,eAAgB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACtE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,iBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACvE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,iBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAkB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,kBAAoB,gBAAiB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACtE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,gBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,eAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACxE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAkB,iBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,iBACvE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,EAAG,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,gBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC3E,CAAE,GAAI,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,mBAAqB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAoB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,iBAC1E,CAAE,EAAG,kBAAoB,iBAAkB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACvE,CAAE,EAAG,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACxE,CAAE,EAAG,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,kBACzE,CAAE,EAAG,kBAAoB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,EAAG,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,kBACxE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,eAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,mBAAqB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,kBAAoB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,kBAAmB,mBAAqB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,eAAiB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACxE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC3E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,kBAAmB,mBAAqB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,kBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,kBAAoB,eAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,oBAAsB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC7E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,eAAiB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,kBAAoB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC5E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,kBAAoB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,oBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC3E,CAAE,GAAI,gBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,gBAAiB,gBAAkB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACtE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,CAAE,GAAI,gBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,kBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC3E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBAC1E,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,gBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,gBAAiB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,gBAAkB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBACzE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,gBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAkB,gBAAiB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACvE,CAAE,GAAI,iBAAkB,iBAAmB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,kBACxE,CAAE,GAAI,iBAAmB,iBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAC1E,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBACzE,CAAE,GAAI,iBAAmB,iBAAkB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAC1E,MAGH,IAAK,OAAQA,EAAO,CAChB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,IAAK,GAAI,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,UAAW,GAAI,EAAG,EAAG,GACvB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,aAAc,IAAK,EAAG,GAAI,GAC5B,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,OAAQ,IAAK,EAAG,EAAG,GACrB,CAAE,YAAa,IAAK,EAAG,EAAG,GAC1B,CAAE,UAAW,GAAI,EAAG,GAAI,GACxB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,OAAQ,GAAI,EAAG,GAAI,GACrB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,aAAc,IAAK,EAAG,EAAG,GAC3B,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,aAAc,IAAK,EAAG,GAAI,GAC5B,CAAE,OAAQ,IAAK,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,OAAQ,GAAI,EAAG,GAAI,GACrB,CAAE,QAAS,IAAK,GAAI,GAAI,GACxB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,OAAQ,IAAK,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,EAAG,EAAG,EAAG,GACrB,CAAE,OAAQ,IAAK,EAAG,GAAI,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,SAAU,GAAI,EAAG,GAAI,GACvB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,IAAK,EAAG,EAAG,GACtB,CAAE,SAAU,EAAG,EAAG,EAAG,GACrB,CAAE,SAAU,IAAK,EAAG,EAAG,GACvB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,OAAQ,IAAK,GAAI,GAAI,GACvB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,GAAI,EAAG,GAC3B,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,EAAG,EAAG,GAC1B,CAAE,MAAO,GAAI,EAAG,GAAI,GACpB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,WAAY,GAAI,EAAG,GAAI,GACzB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,IAAK,EAAG,EAAG,GACvB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,GAAI,GACvB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,MAAO,IAAK,EAAG,GAAI,GACrB,CAAE,SAAU,EAAG,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,IAAK,GAAI,GAAI,GAC5B,CAAE,MAAO,IAAK,EAAG,GAAI,GACrB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,EAAG,EAAG,EAAG,GACrB,CAAE,WAAY,GAAI,EAAG,GAAI,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,GAAI,GACvB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,IAAK,GAAI,EAAG,GACxB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,QAAS,IAAK,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,aAAc,IAAK,EAAG,GAAI,GAC5B,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,aAAc,GAAI,EAAG,EAAG,GAC1B,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,aAAc,IAAK,EAAG,EAAG,GAC3B,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,SAAU,IAAK,GAAI,GAAI,GACzB,CAAE,OAAQ,IAAK,EAAG,GAAI,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,QAAS,IAAK,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,QAAS,EAAG,EAAG,EAAG,GACpB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,MAAO,GAAI,EAAG,EAAG,GACnB,CAAE,QAAS,IAAK,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,YAAa,EAAG,EAAG,EAAG,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,IAAK,EAAG,EAAG,GACvB,CAAE,OAAQ,IAAK,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,SAAU,IAAK,EAAG,EAAG,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,IAAK,EAAG,GAAI,GAC3B,CAAE,aAAc,IAAK,EAAG,GAAI,GAC5B,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,OAAQ,IAAK,EAAG,EAAG,GACrB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,GAAI,GACtB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,IAAK,EAAG,EAAG,GACvB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,QAAS,GAAI,EAAG,EAAG,GACrB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,GAAI,EAAG,EAAG,GACpB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,QAAS,IAAK,EAAG,GAAI,GACvB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,OAAQ,IAAK,EAAG,EAAG,GACrB,CAAE,YAAa,GAAI,EAAG,EAAG,GACzB,CAAE,SAAU,GAAI,EAAG,EAAG,GACtB,CAAE,YAAa,GAAI,EAAG,GAAI,GAC1B,CAAE,OAAQ,IAAK,GAAI,EAAG,GACtB,CAAE,UAAW,IAAK,EAAG,EAAG,GACxB,CAAE,WAAY,GAAI,EAAG,EAAG,GACxB,CAAE,SAAU,IAAK,EAAG,GAAI,GACxB,CAAE,SAAU,GAAI,EAAG,EAAG,IACvB,MAGH,IAAK,QAASA,EAAO,CACjB,CAAE,eAAgB,OAClB,CAAE,eAAgB,OAClB,CAAE,eAAgB,OAClB,CAAE,iBAAkB,OACpB,CAAE,iBAAkB,OACpB,CAAE,iBAAkB,OACpB,CAAE,eAAgB,OAClB,CAAE,eAAgB,OAClB,CAAE,eAAgB,OAClB,CAAE,gBAAiB,OACnB,CAAE,gBAAiB,OACnB,CAAE,gBAAiB,OACnB,CAAE,cAAe,OACjB,CAAE,cAAe,OACjB,CAAE,cAAe,OACjB,CAAE,gBAAiB,OACnB,CAAE,gBAAiB,OACnB,CAAE,gBAAiB,OACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,YAAa,MACf,CAAE,YAAa,MACf,CAAE,YAAa,MACf,CAAE,kBAAmB,MACrB,CAAE,kBAAmB,MACrB,CAAE,kBAAmB,OACrB,CAAE,SAAU,MACZ,CAAE,SAAU,MACZ,CAAE,SAAU,MACZ,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,qBAAsB,MACxB,CAAE,qBAAsB,MACxB,CAAE,qBAAsB,MACxB,CAAE,iBAAkB,MACpB,CAAE,iBAAkB,MACpB,CAAE,iBAAkB,MACpB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,sBAAuB,GACzB,CAAE,sBAAuB,MACzB,CAAE,sBAAuB,MACzB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,mBAAoB,MACtB,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,oBAAqB,MACvB,CAAE,oBAAqB,MACvB,CAAE,oBAAqB,MACvB,CAAE,kBAAmB,MACrB,CAAE,kBAAmB,MACrB,CAAE,kBAAmB,MACrB,CAAE,iBAAkB,GACpB,CAAE,iBAAkB,MACpB,CAAE,iBAAkB,MACpB,CAAE,wBAAyB,MAC3B,CAAE,wBAAyB,MAC3B,CAAE,wBAAyB,MAC3B,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,WAAY,MACd,CAAE,cAAe,MACjB,CAAE,cAAe,MACjB,CAAE,cAAe,MACjB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,cAAe,MACjB,CAAE,cAAe,MACjB,CAAE,cAAe,MACjB,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,UAAW,MACb,CAAE,YAAa,MACf,CAAE,YAAa,MACf,CAAE,YAAa,MACf,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,MACnB,CAAE,gBAAiB,KACnB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,eAAgB,MAClB,CAAE,cAAe,MACjB,CAAE,cAAe,KACjB,CAAE,cAAe,MACjB,CAAE,cAAe,KACjB,CAAE,cAAe,MACjB,CAAE,cAAe,MACjB,CAAE,YAAa,KACf,CAAE,YAAa,KACf,CAAE,YAAa,MACf,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,cAAe,MACjB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,MACnB,CAAE,kBAAmB,MACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,MACpB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,mBAAoB,KACtB,CAAE,mBAAoB,KACtB,CAAE,mBAAoB,KACtB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,oBAAqB,KACvB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,aAAc,KAChB,CAAE,aAAc,KAChB,CAAE,aAAc,KAChB,CAAE,uBAAwB,KAC1B,CAAE,uBAAwB,KAC1B,CAAE,uBAAwB,KAC1B,CAAE,mBAAoB,KACtB,CAAE,mBAAoB,KACtB,CAAE,mBAAoB,KACtB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,eAAgB,KAClB,CAAE,wBAAyB,KAC3B,CAAE,wBAAyB,KAC3B,CAAE,wBAAyB,KAC3B,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,qBAAsB,KACxB,CAAE,qBAAsB,IACxB,CAAE,qBAAsB,KACxB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,UAAW,KACb,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,kBAAmB,KACrB,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,cAAe,KACjB,CAAE,cAAe,KACjB,CAAE,cAAe,IACjB,CAAE,mBAAoB,IACtB,CAAE,mBAAoB,KACtB,CAAE,mBAAoB,KACtB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,gBAAiB,KACnB,CAAE,YAAa,KACf,CAAE,YAAa,KACf,CAAE,YAAa,KACf,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,iBAAkB,KACpB,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,WAAY,KACd,CAAE,UAAW,KACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,SAAU,IACZ,CAAE,SAAU,IACZ,CAAE,SAAU,KACZ,CAAE,kBAAmB,IACrB,CAAE,kBAAmB,IACrB,CAAE,kBAAmB,KACrB,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,UAAW,IACb,CAAE,YAAa,GACf,CAAE,YAAa,IACf,CAAE,YAAa,KAChB,MAGH,QAASA,EAAO,CACZ,CAAE,aAAc,EAAG,IAAK,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,EAAG,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,GAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,EAAG,EAAG,IAAK,GAC3B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,EAAG,IAAK,EAAG,GAC3B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,GAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,EAAG,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,EAAG,KAC3B,CAAE,aAAc,EAAG,IAAK,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,GAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,GAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,EAAG,IAAK,IAAK,KAC7B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,EAAG,IAAK,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,EAAG,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,EAAG,KAC7B,CAAE,aAAc,EAAG,IAAK,IAAK,GAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,EAAG,IAAK,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,aAAc,IAAK,IAAK,EAAG,KAC7B,CAAE,aAAc,IAAK,IAAK,IAAK,KAC/B,CAAE,YAAa,IAAK,IAAK,EAAG,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,GAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,EAAG,GAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,EAAG,IAAK,EAAG,KAC1B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,GAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,GAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,EAAG,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,GAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,EAAG,EAAG,IAAK,KAC1B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,YAAa,IAAK,IAAK,EAAG,KAC5B,CAAE,YAAa,IAAK,EAAG,IAAK,GAC5B,CAAE,YAAa,IAAK,IAAK,IAAK,KAC9B,CAAE,YAAa,IAAK,EAAG,IAAK,KAC5B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,EAAG,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,EAAG,IAAK,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,EAAG,IAAK,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,EAAG,IAAK,IACzB,CAAE,SAAU,IAAK,EAAG,IAAK,IACzB,CAAE,SAAU,IAAK,EAAG,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,EAAG,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,EAAG,EAAG,IAAK,IACvB,CAAE,SAAU,EAAG,IAAK,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,EAAG,IAAK,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,IAAK,EAAG,IAAK,IACzB,CAAE,SAAU,IAAK,IAAK,IAAK,IAC3B,CAAE,SAAU,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","file":"static/js/main.2a630335.chunk.js","sourcesContent":["// Data sets.\nconst Data = ( props ) => {\n};\n\n// Returns column names.\nData.getColumnNames = (  dataSet ) => {\n    let names = [];\n    switch( dataSet ) {\n        case \"Penguins\": names = [ \"Species\", \"Island\", \"Bill Length (mm)\", \"Bill Depth (mm)\", \"Flipper Length (mm)\", \"Body Mass (g)\", \"Sex\" ]; break;\n        case \"Cytometry\": names = [ \"Cluster\", \"Prin 1\", \"Prin 2\", \"ForSc\", \"SideSc\", \"CD3\", \"CD8\", \"CD4\", \"MCB\", \"Distance\" ]; break;\n        case \"Food\": names = [ \"Food\", \"Calories\", \"Fat\", \"Carbohydrates\", \"Protein\" ]; break;\n        case \"Sales\": names = [ \"Model\", \"Cars Sold, 2022 Q1\" ]; break;\n        default: names = [ \"Species\", \"Sepal Length (cm)\", \"Sepal Width (cm)\", \"Petal Length (cm)\", \"Petal Width (cm)\" ]; break;\n    }\n    return names;\n};\n\n// Returns values.\nData.getValues = (  dataSet ) => {\n    let data = [];\n    switch( dataSet ) {\n    \n        // Penguins\n        // Horst AM, Hill AP, Gorman KB (2020).\n        // palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0.\n        // https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\n        case \"Penguins\": data = [\n            [ \"Adelie\", \"Torgersen\", 39.1,18.7,181,3750, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 39.5,17.4,186,3800, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 40.3,18,195,3250, \"Female\" ],\n//            [ \"Adelie\", \"Torgersen\", ,,,, ],\n            [ \"Adelie\", \"Torgersen\", 36.7,19.3,193,3450, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 39.3,20.6,190,3650, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 38.9,17.8,181,3625, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 39.2,19.6,195,4675, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 34.1,18.1,193,3475, ],\n            [ \"Adelie\", \"Torgersen\", 42,20.2,190,4250, ],\n            [ \"Adelie\", \"Torgersen\", 37.8,17.1,186,3300, ],\n            [ \"Adelie\", \"Torgersen\", 37.8,17.3,180,3700, ],\n            [ \"Adelie\", \"Torgersen\", 41.1,17.6,182,3200, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 38.6,21.2,191,3800, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 34.6,21.1,198,4400, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 36.6,17.8,185,3700, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 38.7,19,195,3450, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 42.5,20.7,197,4500, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 34.4,18.4,184,3325, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 46,21.5,194,4200, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 37.8,18.3,174,3400, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 37.7,18.7,180,3600, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35.9,19.2,189,3800, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 38.2,18.1,185,3950, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 38.8,17.2,180,3800, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35.3,18.9,187,3800, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 40.6,18.6,183,3550, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 40.5,17.9,187,3200, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 37.9,18.6,172,3150, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 40.5,18.9,180,3950, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 39.5,16.7,178,3250, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 37.2,18.1,178,3900, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 39.5,17.8,188,3300, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.9,18.9,184,3900, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.4,17,195,3325, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39.2,21.1,196,4150, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 38.8,20,190,3950, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 42.2,18.5,180,3550, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 37.6,19.3,181,3300, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39.8,19.1,184,4650, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.5,18,182,3150, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.8,18.4,195,3900, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36,18.5,186,3100, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 44.1,19.7,196,4400, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 37,16.9,185,3000, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39.6,18.8,190,4600, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 41.1,19,182,3425, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 37.5,18.9,179,2975, ],\n            [ \"Adelie\", \"Dream\", 36,17.9,190,3450, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 42.3,21.2,191,4150, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 39.6,17.7,186,3500, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 40.1,18.9,188,4300, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35,17.9,190,3450, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 42,19.5,200,4050, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 34.5,18.1,187,2900, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41.4,18.6,191,3700, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 39,17.5,186,3550, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 40.6,18.8,193,3800, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 36.5,16.6,181,2850, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 37.6,19.1,194,3750, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35.7,16.9,185,3150, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41.3,21.1,195,4400, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 37.6,17,185,3600, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41.1,18.2,192,4050, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 36.4,17.1,184,2850, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41.6,18,192,3950, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35.5,16.2,195,3350, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41.1,19.1,188,4100, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 35.9,16.6,190,3050, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 41.8,19.4,198,4450, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 33.5,19,190,3600, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 39.7,18.4,190,3900, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 39.6,17.2,196,3550, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 45.8,18.9,197,4150, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 35.5,17.5,190,3700, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 42.8,18.5,195,4250, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 40.9,16.8,191,3700, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 37.2,19.4,184,3900, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 36.2,16.1,187,3550, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 42.1,19.1,195,4000, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 34.6,17.2,189,3200, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 42.9,17.6,196,4700, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 36.7,18.8,187,3800, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 35.1,19.4,193,4200, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 37.3,17.8,191,3350, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 41.3,20.3,194,3550, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.3,19.5,190,3800, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.9,18.6,189,3500, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 38.3,19.2,189,3950, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 38.9,18.8,190,3600, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 35.7,18,202,3550, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 41.1,18.1,205,4300, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 34,17.1,185,3400, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39.6,18.1,186,4450, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.2,17.3,187,3300, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.8,18.9,208,4300, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 38.1,18.6,190,3700, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.3,18.5,196,4350, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 33.1,16.1,178,2900, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 43.2,18.5,192,4100, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 35,17.9,192,3725, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 41,20,203,4725, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 37.7,16,183,3075, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 37.8,20,190,4250, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 37.9,18.6,193,2925, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 39.7,18.9,184,3550, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 38.6,17.2,199,3750, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 38.2,20,190,3900, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 38.1,17,181,3175, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 43.2,19,197,4775, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 38.1,16.5,198,3825, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 45.6,20.3,191,4600, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 39.7,17.7,193,3200, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 42.2,19.5,197,4275, \"Male\" ],\n            [ \"Adelie\", \"Biscoe\", 39.6,20.7,191,3900, \"Female\" ],\n            [ \"Adelie\", \"Biscoe\", 42.7,18.3,196,4075, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 38.6,17,188,2900, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 37.3,20.5,199,3775, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 35.7,17,189,3350, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 41.1,18.6,189,3325, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 36.2,17.2,187,3150, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 37.7,19.8,198,3500, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 40.2,17,176,3450, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 41.4,18.5,202,3875, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 35.2,15.9,186,3050, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 40.6,19,199,4000, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 38.8,17.6,191,3275, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 41.5,18.3,195,4300, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 39,17.1,191,3050, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 44.1,18,210,4000, \"Male\" ],\n            [ \"Adelie\", \"Torgersen\", 38.5,17.9,190,3325, \"Female\" ],\n            [ \"Adelie\", \"Torgersen\", 43.1,19.2,197,3500, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.8,18.5,193,3500, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 37.5,18.5,199,4475, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 38.1,17.6,187,3425, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 41.1,17.5,190,3900, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 35.6,17.5,191,3175, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.2,20.1,200,3975, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 37,16.5,185,3400, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39.7,17.9,193,4250, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 40.2,17.1,193,3400, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.6,17.2,187,3475, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 32.1,15.5,188,3050, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 40.7,17,190,3725, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 37.3,16.8,192,3000, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 39,18.7,185,3650, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 39.2,18.6,190,4250, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36.6,18.4,184,3475, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 36,17.8,195,3450, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 37.8,18.1,193,3750, \"Male\" ],\n            [ \"Adelie\", \"Dream\", 36,17.1,187,3700, \"Female\" ],\n            [ \"Adelie\", \"Dream\", 41.5,18.5,201,4000, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.5,17.9,192,3500, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50,19.5,196,3900, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 51.3,19.2,193,3650, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.4,18.7,188,3525, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52.7,19.8,197,3725, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.2,17.8,198,3950, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 46.1,18.2,178,3250, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51.3,18.2,197,3750, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46,18.9,195,4150, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51.3,19.9,198,3700, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.6,17.8,193,3800, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51.7,20.3,194,3775, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 47,17.3,185,3700, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52,18.1,201,4050, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.9,17.1,190,3575, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.5,19.6,201,4050, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.3,20,197,3300, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 58,17.8,181,3700, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 46.4,18.6,190,3450, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 49.2,18.2,195,4400, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 42.4,17.3,181,3600, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 48.5,17.5,191,3400, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 43.2,16.6,187,2900, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.6,19.4,193,3800, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.7,17.9,195,3300, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52,19,197,4150, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.5,18.4,200,3400, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 49.5,19,200,3800, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.4,17.8,191,3700, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52.8,20,205,4550, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 40.9,16.6,187,3200, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 54.2,20.8,201,4300, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 42.5,16.7,187,3350, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51,18.8,203,4100, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 49.7,18.6,195,3600, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 47.5,16.8,199,3900, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 47.6,18.3,195,3850, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52,20.7,210,4800, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.9,16.6,192,2700, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 53.5,19.9,205,4500, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 49,19.5,210,3950, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.2,17.5,187,3650, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.9,19.1,196,3550, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.5,17,196,3500, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.9,17.9,196,3675, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.8,18.5,201,4450, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.1,17.9,190,3400, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 49,19.6,212,4300, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 51.5,18.7,187,3250, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 49.8,17.3,198,3675, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 48.1,16.4,199,3325, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51.4,19,201,3950, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.7,17.3,193,3600, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 50.7,19.7,203,4050, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 42.5,17.3,187,3350, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 52.2,18.8,197,3450, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.2,16.6,191,3250, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 49.3,19.9,203,4050, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.2,18.8,202,3800, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 45.6,19.4,194,3525, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 51.9,19.5,206,3950, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 46.8,16.5,189,3650, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 45.7,17,195,3650, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 55.8,19.8,207,4000, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 43.5,18.1,202,3400, \"Female\" ],\n            [ \"Chinstrap\", \"Dream\", 49.6,18.2,193,3775, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.8,19,210,4100, \"Male\" ],\n            [ \"Chinstrap\", \"Dream\", 50.2,18.7,198,3775, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.1,13.2,211,4500, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50,16.3,230,5700, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.7,14.1,210,4450, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50,15.2,218,5700, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.6,14.5,215,5400, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.5,13.5,210,4550, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.4,14.6,211,4800, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.7,15.3,219,5200, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.3,13.4,209,4400, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.8,15.4,215,5150, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 40.9,13.7,214,4650, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49,16.1,216,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.5,13.7,214,4650, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.4,14.6,213,5850, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.8,14.6,210,4200, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.3,15.7,217,5850, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 42,13.5,210,4150, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.2,15.2,221,6300, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.2,14.5,209,4800, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.7,15.1,222,5350, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.2,14.3,218,5700, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.1,14.5,215,5000, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.5,14.5,213,4400, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.3,15.8,215,5050, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 42.9,13.1,215,5000, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.1,15.1,215,5100, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.5,14.3,216,4100, ],\n            [ \"Gentoo\", \"Biscoe\", 47.8,15,215,5650, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.2,14.3,210,4600, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50,15.3,220,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.3,15.3,222,5250, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 42.8,14.2,209,4700, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.1,14.5,207,5050, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 59.6,17,230,6050, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.1,14.8,220,5150, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.4,16.3,220,5400, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 42.6,13.7,213,4950, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.4,17.3,219,5250, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44,13.6,208,4350, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.7,15.7,208,5350, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 42.7,13.7,208,3950, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.6,16,225,5700, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.3,13.7,210,4300, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.6,15,216,4750, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.5,15.9,222,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.6,13.9,217,4900, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.5,13.9,210,4200, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.5,15.9,225,5400, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.9,13.3,213,5100, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.2,15.8,215,5300, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.6,14.2,210,4850, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.5,14.1,220,5300, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.1,14.4,210,4400, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.1,15,225,5000, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.5,14.4,217,4900, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45,15.4,220,5050, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.8,13.9,208,4300, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.5,15,220,5000, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.2,14.5,208,4450, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.4,15.3,224,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.3,13.8,208,4200, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.2,14.9,221,5300, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.7,13.9,214,4400, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 54.3,15.7,231,5650, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.8,14.2,219,4700, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.8,16.8,230,5700, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.2,14.4,214,4650, ],\n            [ \"Gentoo\", \"Biscoe\", 49.5,16.2,229,5800, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.5,14.2,220,4700, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.7,15,223,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.7,15,216,4750, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.4,15.6,221,5000, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.2,15.6,221,5100, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.5,14.8,217,5200, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.4,15,216,4700, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.6,16,230,5800, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.5,14.2,209,4600, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 51.1,16.3,220,6000, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.2,13.8,215,4750, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.2,16.4,223,5950, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.1,14.5,212,4625, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 52.5,15.6,221,5450, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.4,14.6,212,4725, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50,15.9,224,5350, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.9,13.8,212,4750, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.8,17.3,228,5600, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.4,14.4,218,4600, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 51.3,14.2,218,5300, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.5,14,212,4875, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 52.1,17,230,5550, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.5,15,218,4950, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 52.2,17.1,228,5400, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.5,14.5,212,4750, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.5,16.1,224,5650, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.5,14.7,214,4850, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.8,15.7,226,5200, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.4,15.8,216,4925, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.9,14.6,222,4875, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.4,14.4,203,4625, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 51.1,16.5,225,5250, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.5,15,219,4850, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 55.9,17,228,5600, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.2,15.5,215,4975, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.1,15,228,5500, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.3,13.8,216,4725, ],\n            [ \"Gentoo\", \"Biscoe\", 46.8,16.1,215,5500, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 41.7,14.7,210,4700, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 53.4,15.8,219,5500, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.3,14,208,4575, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 48.1,15.1,209,5500, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.5,15.2,216,5000, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.8,15.9,229,5950, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 43.5,15.2,213,4650, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 51.5,16.3,230,5500, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 46.2,14.1,217,4375, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 55.1,16,230,5850, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 44.5,15.7,217,4875, ],\n            [ \"Gentoo\", \"Biscoe\", 48.8,16.2,222,6000, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 47.2,13.7,214,4925, \"Female\" ],\n//            [ \"Gentoo\", \"Biscoe\", ,,,, ],\n            [ \"Gentoo\", \"Biscoe\", 46.8,14.3,215,4850, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 50.4,15.7,222,5750, \"Male\" ],\n            [ \"Gentoo\", \"Biscoe\", 45.2,14.8,212,5200, \"Female\" ],\n            [ \"Gentoo\", \"Biscoe\", 49.9,16.1,213,5400, \"Male\" ]\n        ]; break;\n        \n        // Cell metrics, with clustering and principal components.  Subset of Cytometry, from JMP(r) software (http://www.jmp.com).\n        case \"Cytometry\": data = [\n            [ 1, -0.88614853786443, 0.833649691339127, 208, 253, 264, 121, 312, 177, 1.5012021834317 ],\n            [ 1, -1.00530331040326, 0.468798610654543, 147, 312, 266, 77, 264, 165, 1.99540776688693 ],\n            [ 1, -1.11048752218581, 1.1109456556848, 201, 260, 280, 87, 327, 186, 0.854312889799975 ],\n            [ 1, -1.29890426673148, 1.31622863904121, 240, 321, 289, 63, 341, 260, 1.51301438849491 ],\n            [ 1, -1.08127232849489, 0.823601942674046, 182, 227, 291, 55, 280, 204, 0.610016259792745 ],\n            [ 1, -0.898402671402687, 0.918620486822622, 151, 273, 293, 83, 291, 175, 0.914858956941992 ],\n            [ 1, -0.920206735521245, 1.09078194481738, 143, 233, 293, 92, 312, 178, 0.787369795009854 ],\n            [ 1, -0.823703402460829, 1.14993834859876, 197, 252, 306, 90, 306, 242, 0.532928581171672 ],\n            [ 1, -0.799773497078066, 1.24724918994607, 210, 267, 308, 97, 316, 194, 0.283178010229439 ],\n            [ 1, -0.751506749309536, 0.725737652460891, 200, 265, 311, 63, 249, 200, 0.686866856043131 ],\n            [ 1, -0.753636122465718, 1.48197467992005, 198, 280, 311, 115, 342, 191, 0.492217127124197 ],\n            [ 1, -0.931847160026507, 1.20976751427581, 191, 237, 312, 71, 306, 163, 1.09127983480629 ],\n            [ 1, -0.94532649829978, 1.35018184141416, 218, 255, 314, 76, 321, 224, 0.183635967952576 ],\n            [ 1, -0.721549200363652, 0.939112500030745, 141, 227, 317, 73, 269, 185, 0.580786977095652 ],\n            [ 1, -0.621876281310339, 1.53486193180004, 225, 278, 318, 126, 342, 205, 0.36041420902743 ],\n            [ 1, -0.745141657836261, 1.31596229476204, 197, 242, 319, 93, 313, 218, 0.0757256303859635 ],\n            [ 1, -0.411003675518495, 1.15649958775538, 143, 245, 320, 125, 295, 194, 0.345713434203973 ],\n            [ 1, -0.759638373965759, 1.34262222258522, 179, 249, 321, 90, 314, 222, 0.0894639342603224 ],\n            [ 1, -1.22939840940941, 1.28465511204357, 180, 237, 322, 22, 302, 191, 0.689381644232329 ],\n            [ 1, -0.81286159884745, 1.24921088669961, 153, 237, 322, 75, 301, 251, 0.683966290714043 ],\n            [ 1, -0.499861948967498, 1.19616580859983, 195, 253, 322, 113, 297, 199, 0.188485357008196 ],\n            [ 1, -0.489645311897066, 1.21988609744365, 181, 236, 322, 116, 300, 239, 0.429630286553216 ],\n            [ 1, -0.790705888553411, 1.25654765710789, 123, 268, 323, 77, 301, 186, 0.321974736635742 ],\n            [ 1, -0.507795702021094, 1.31929679035262, 139, 235, 323, 119, 311, 190, 0.324074703727765 ],\n            [ 1, -0.910763854704017, 1.76914485267057, 209, 303, 324, 95, 362, 240, 0.688490970682596 ],\n            [ 1, -1.1441811139234, 1.30609543072876, 198, 249, 326, 29, 301, 205, 0.425489465172546 ],\n            [ 1, 0.0263218509639893, 0.0924483604196897, 175, 258, 328, 98, 159, 178, 3.23976939905154 ],\n            [ 1, -0.448100335903057, 1.23737919817493, 135, 236, 328, 114, 296, 227, 0.200569369177519 ],\n            [ 1, -0.63830397156899, 1.36433233614845, 187, 238, 329, 96, 309, 241, 0.360390600682057 ],\n            [ 1, -0.462088363104441, 1.32091632565569, 159, 242, 330, 115, 304, 245, 0.531293006408129 ],\n            [ 1, -1.10628981192392, 1.39633929654583, 199, 258, 331, 33, 307, 247, 0.832683288493927 ],\n            [ 1, -0.578256959275471, 1.4619129723738, 228, 268, 335, 102, 315, 196, 0.123420936703612 ],\n            [ 1, -1.00364138287616, 1.76688953659215, 208, 277, 336, 65, 348, 215, 0.242591465909927 ],\n            [ 1, -0.633620223686695, 1.39369174482169, 185, 243, 337, 87, 304, 195, 0.116002632510438 ],\n            [ 1, -0.495975847167698, 1.6204381052753, 196, 273, 337, 121, 333, 217, 0.191964564739119 ],\n            [ 1, -0.362857912066165, 1.46536754702903, 198, 253, 337, 128, 315, 226, 0.253222128955239 ],\n            [ 1, -1.01478431225106, 1.67137834914488, 218, 283, 338, 54, 334, 201, 0.245041704686295 ],\n            [ 1, -0.738280046042014, 1.51503539971455, 193, 255, 338, 80, 317, 214, 0.0163023682448306 ],\n            [ 1, -0.427720322931529, 1.43776007976361, 189, 247, 338, 116, 310, 217, 0.093012211594627 ],\n            [ 1, -1.0009140011861, 1.62234787290291, 233, 259, 339, 51, 327, 158, 1.34151973197216 ],\n            [ 1, -0.85326002333886, 1.3525030093268, 149, 236, 339, 52, 295, 254, 0.882182490472764 ],\n            [ 1, -0.684717607304181, 1.56975270827815, 140, 254, 340, 88, 322, 193, 0.160409896218914 ],\n            [ 1, -0.624486921673364, 1.46824216380752, 178, 234, 340, 89, 310, 229, 0.120517762103503 ],\n            [ 1, -0.42422369168963, 1.48763034342328, 180, 242, 340, 117, 314, 200, 0.14653552480149 ],\n            [ 1, -0.661348149785079, 1.48010847174949, 158, 239, 342, 82, 309, 239, 0.305396148996546 ],\n            [ 1, -0.728846856788749, 1.63900616888503, 160, 239, 342, 84, 328, 249, 0.602456381974662 ],\n            [ 1, -0.668107482229819, 1.59437282407199, 195, 254, 342, 89, 323, 186, 0.290582024869382 ],\n            [ 1, -0.936078220905402, 1.72642549211885, 192, 263, 343, 61, 336, 183, 0.500743038043453 ],\n            [ 1, -0.460785032561411, 1.5489170015499, 212, 255, 343, 112, 318, 187, 0.318669419312596 ],\n            [ 1, -0.828887386228861, 1.67127557978888, 190, 239, 344, 70, 329, 260, 1.02118816759654 ],\n            [ 1, -0.625218610554983, 1.69857052235257, 179, 266, 344, 99, 334, 157, 1.29049838578986 ],\n            [ 1, -0.554262598925621, 1.67765746638335, 215, 259, 344, 107, 332, 183, 0.436228623084279 ],\n            [ 1, -1.10326404522771, 1.58423616516067, 192, 249, 345, 26, 315, 248, 0.955577976804669 ],\n            [ 1, -1.00511542701275, 1.49649933455659, 120, 252, 345, 33, 305, 269, 1.65191219688867 ],\n            [ 1, -0.664871411611646, 1.50670836004034, 179, 266, 345, 79, 309, 216, 0.0266755158985095 ],\n            [ 1, -0.635135360385481, 1.72427058369341, 193, 259, 345, 98, 336, 187, 0.349642476874884 ],\n            [ 1, -0.0699271941200545, 1.53273589408851, 199, 266, 345, 160, 317, 181, 0.943900285191147 ],\n            [ 1, 0.452211959025213, 0.410385360097774, 217, 380, 347, 149, 181, 249, 2.97743298587282 ],\n            [ 1, -0.709666392776957, 1.64170564973509, 145, 254, 348, 78, 322, 196, 0.148570475485991 ],\n            [ 1, -1.02485784112199, 1.58986295794998, 114, 226, 349, 31, 312, 227, 0.468953734870608 ],\n            [ 1, -0.892353878765651, 1.63061410700997, 192, 264, 350, 50, 317, 234, 0.389539580108031 ],\n            [ 1, -0.664389353268202, 1.64005571164844, 212, 261, 350, 81, 320, 231, 0.194623463789967 ],\n            [ 1, -0.346052919856752, 1.56227043869018, 209, 246, 350, 118, 313, 217, 0.133782910168793 ],\n            [ 1, -0.60020510640292, 1.51521475227668, 168, 239, 352, 78, 303, 225, 0.123520832302548 ],\n            [ 1, -0.486711869274203, 1.41900116618501, 176, 231, 353, 85, 291, 220, 0.112073287841351 ],\n            [ 1, -0.442648576990512, 1.51433223503531, 180, 249, 354, 96, 302, 266, 1.2379407578942 ],\n            [ 1, -0.661884971531648, 1.78271960616184, 210, 269, 357, 81, 330, 172, 0.753374124063771 ],\n            [ 1, -0.541489557470888, 1.74428304667777, 194, 255, 360, 90, 323, 272, 1.56153840539932 ],\n            [ 1, -0.927637017445282, 1.71335341086188, 183, 253, 361, 35, 315, 182, 0.756377707607232 ],\n            [ 1, -0.797821110162797, 1.81053184610444, 203, 264, 361, 59, 328, 262, 1.23857071458036 ],\n            [ 1, -0.708375494553266, 1.65151406990425, 172, 243, 363, 57, 307, 254, 0.931643757471912 ],\n            [ 1, -0.64682754382629, 1.71317827493345, 193, 275, 364, 68, 314, 202, 0.204657725573379 ],\n            [ 1, -0.495273529626123, 1.80277978163843, 203, 252, 367, 90, 323, 205, 0.188906491989171 ],\n            [ 1, -0.022877198044164, 1.67424172777912, 225, 265, 367, 144, 311, 249, 1.03560196674558 ],\n            [ 1, -0.481454977496709, 1.62367142717808, 207, 241, 368, 78, 300, 223, 0.232095876563333 ],\n            [ 1, -0.431233893194133, 2.01875210673717, 180, 261, 368, 112, 349, 171, 1.07138175303366 ],\n            [ 1, -0.356429604147391, 2.22720754283066, 122, 344, 371, 132, 372, 207, 0.878430612896563 ],\n            [ 1, 0.573619980528632, 1.56459422756833, 133, 434, 371, 210, 298, 181, 2.16905011002566 ],\n            [ 1, -0.324838938654099, 1.84566041900882, 153, 256, 375, 104, 321, 269, 1.59291160664067 ],\n            [ 1, 0.343335274056328, 0.753724585158103, 210, 290, 376, 116, 191, 217, 2.05672967569407 ],\n            [ 1, 0.0158107752284224, 1.192917925151, 205, 320, 393, 78, 224, 167, 2.22563129335518 ],\n            [ 1, -0.0704398623251312, 1.86524027822681, 133, 309, 393, 113, 306, 161, 1.61832342296145 ],\n            [ 1, -1.07240014746564, 3.06630056620604, 448, 418, 401, 51, 437, 233, 2.98966866577382 ],\n            [ 2, 1.02473490440923, -0.245741064708115, 199, 257, 235, 343, 226, 174, 2.04585967974955 ],\n            [ 2, 1.11276969232767, -0.503533689443387, 187, 252, 272, 283, 155, 175, 0.414601159731199 ],\n            [ 2, 1.1090624934516, -0.0480061391753708, 184, 269, 272, 314, 211, 175, 0.838913650257041 ],\n            [ 2, 1.28792886003198, -0.802426203025846, 149, 245, 280, 274, 111, 153, 0.954235835565875 ],\n            [ 2, 1.4062484258181, -0.467402520232985, 174, 262, 282, 310, 151, 157, 0.569425121763948 ],\n            [ 2, 1.55100554690331, -0.688276947099451, 211, 267, 282, 314, 125, 195, 0.318002394100033 ],\n            [ 2, 1.52111245292451, -0.783218142007062, 205, 272, 283, 302, 112, 199, 0.420582333365067 ],\n            [ 2, 1.59393551114034, -1.18504828972614, 196, 258, 285, 281, 61, 172, 1.27989163034486 ],\n            [ 2, 1.61010113854148, -0.869035239646453, 177, 250, 285, 305, 100, 165, 0.678590893091431 ],\n            [ 2, 1.45542726762577, -0.622460751439154, 151, 234, 286, 300, 128, 152, 0.7126484107671 ],\n            [ 2, 1.00956847732202, 0.236044275998825, 202, 279, 286, 300, 230, 183, 0.912903126848823 ],\n            [ 2, 1.17378082130808, -0.139258350001829, 163, 249, 288, 293, 183, 152, 0.757270280414707 ],\n            [ 2, 1.1775380131737, 0.0481466413491516, 146, 249, 289, 305, 205, 215, 0.781498955918938 ],\n            [ 2, 1.37641978680639, -0.443910062478352, 133, 244, 290, 296, 145, 161, 0.394615873051766 ],\n            [ 2, 1.36604610698333, -0.345009322576718, 148, 252, 291, 300, 156, 177, 0.147986336844914 ],\n            [ 2, 1.6561207970174, -0.59980309843368, 158, 253, 291, 321, 127, 149, 0.808074676728798 ],\n            [ 2, 1.64615228825136, -0.704180915311233, 150, 269, 292, 311, 113, 178, 0.318853945447664 ],\n            [ 2, 1.34754230473783, 0.0877578053298205, 229, 289, 292, 326, 208, 211, 0.783892879908682 ],\n            [ 2, 1.40669142125754, -0.475777272399408, 159, 256, 294, 292, 137, 153, 0.581820542882651 ],\n            [ 2, 1.19494428209677, -0.0391279487398117, 188, 261, 294, 294, 189, 183, 0.265026105326128 ],\n            [ 2, 1.22854280900564, 0.113140359300394, 152, 264, 294, 309, 208, 160, 0.780274190717401 ],\n            [ 2, 1.47687818333506, -0.691102255717528, 172, 236, 295, 285, 110, 150, 0.859598694131547 ],\n            [ 2, 1.46559064352687, -0.445800158694294, 200, 249, 296, 299, 139, 183, 0.0905823078205411 ],\n            [ 2, 1.58127567912066, -0.437125974901084, 171, 262, 296, 315, 141, 204, 0.212411420624918 ],\n            [ 2, 1.25591935264075, -0.38261107731163, 196, 248, 297, 274, 144, 200, 0.201464797632953 ],\n            [ 2, 1.21673414795, 0.0833730009409965, 201, 285, 297, 301, 201, 192, 0.370179306220582 ],\n            [ 2, 1.49359182628052, -0.406326383486914, 173, 284, 297, 304, 143, 203, 0.166346868578558 ],\n            [ 2, 1.57430754498774, -0.33031847205151, 197, 259, 297, 320, 153, 174, 0.172793777701033 ],\n            [ 2, 1.15197525495573, 0.315921290112351, 215, 279, 298, 307, 228, 194, 0.794796042094223 ],\n            [ 2, 1.42120083341857, -0.514081425778727, 203, 255, 299, 284, 127, 190, 0.147935626851998 ],\n            [ 2, 1.41017385423411, -0.131244601064177, 173, 260, 299, 309, 174, 172, 0.21310415777196 ],\n            [ 2, 1.2387739080536, -0.387638240812538, 176, 244, 300, 267, 140, 131, 1.44276562328526 ],\n            [ 2, 1.40264527223753, -0.211392176090574, 190, 272, 300, 301, 163, 186, 0.0592441989155576 ],\n            [ 2, 1.3080057175838, 0.144407173898216, 168, 278, 300, 313, 206, 160, 0.724763837694863 ],\n            [ 2, 1.44599283985092, -0.693249819771404, 193, 252, 301, 272, 103, 156, 0.795137073207189 ],\n            [ 2, 1.59324164664114, -0.75981612656833, 170, 239, 301, 287, 96, 209, 0.611891728112681 ],\n            [ 2, 1.86872853499396, -1.02991347531384, 178, 268, 301, 305, 65, 197, 0.979022299271871 ],\n            [ 2, 1.17035957511882, 0.430515476845219, 238, 267, 301, 313, 239, 189, 0.995239748213907 ],\n            [ 2, 1.73773820710262, -1.11822528112611, 128, 265, 302, 280, 52, 194, 1.28823578451821 ],\n            [ 2, 1.61051750339624, -0.800939839862358, 165, 251, 302, 285, 90, 184, 0.514908887205126 ],\n            [ 2, 1.64940105490107, -0.803489604899026, 167, 250, 302, 290, 90, 178, 0.531913809352857 ],\n            [ 2, 1.46052711665063, -0.29516946170063, 167, 248, 302, 300, 151, 163, 0.268363164872263 ],\n            [ 2, 1.35693643108709, 0.0700064707257786, 195, 270, 303, 310, 194, 171, 0.368146244621052 ],\n            [ 2, 1.13012499345179, -1.4103956015943, 190, 271, 304, 176, 9, 203, 4.22661691031944 ],\n            [ 2, 1.3382255930994, -0.0175379142412253, 198, 261, 304, 300, 182, 179, 0.166749908886052 ],\n            [ 2, 1.45934026372244, -0.504495087995393, 186, 267, 305, 281, 122, 196, 0.191189434044139 ],\n            [ 2, 1.36958056260765, -0.10023525430429, 169, 254, 305, 297, 171, 182, 0.0796131399910525 ],\n            [ 2, 1.63627336280328, -0.483577049357637, 165, 277, 305, 306, 126, 183, 0.107284873982835 ],\n            [ 2, 1.653301091254, -0.444043234617934, 204, 253, 305, 311, 131, 168, 0.230864067849961 ],\n            [ 2, 1.35910336491349, -0.261490270839428, 174, 264, 306, 283, 150, 208, 0.217640722698591 ],\n            [ 2, 1.66905088122477, -0.655798546884718, 171, 273, 306, 297, 104, 160, 0.586001437267126 ],\n            [ 2, 1.88293629396908, -0.604783315477201, 194, 268, 306, 329, 112, 133, 1.47274421042245 ],\n            [ 2, 1.47757997345223, -0.0490876167920225, 170, 279, 307, 312, 176, 197, 0.140534533648983 ],\n            [ 2, 1.37917079461354, -0.0988855138792602, 177, 239, 308, 294, 168, 212, 0.291630802069598 ],\n            [ 2, 1.39523290414358, -0.0430282202363417, 202, 253, 308, 300, 175, 195, 0.102720363325207 ],\n            [ 2, 1.18008021929268, 0.385714340475314, 181, 273, 308, 301, 226, 201, 0.767052433293471 ],\n            [ 2, 1.26806395937276, 0.404335099245799, 220, 279, 308, 314, 229, 222, 1.24936358119913 ],\n            [ 2, 1.19811289328028, 0.32081029880514, 148, 268, 310, 296, 216, 179, 0.547326106143776 ],\n            [ 2, 1.6051916499503, -0.274989207159398, 192, 277, 310, 309, 146, 183, 0.0246956497815029 ],\n            [ 2, 1.74313767965522, -0.511677159921746, 178, 263, 310, 311, 118, 176, 0.203231028989529 ],\n            [ 2, 1.45676842255122, -0.199556270932188, 196, 269, 311, 293, 153, 193, 0.0222034115187031 ],\n            [ 2, 1.97612666912489, -0.794588356051458, 162, 272, 311, 321, 84, 207, 0.753662947640819 ],\n            [ 2, 1.54382763627282, -0.765581074165761, 166, 253, 312, 264, 83, 169, 0.840819757356887 ],\n            [ 2, 1.91746314284061, -1.12341525351535, 180, 276, 312, 289, 42, 172, 1.5590483850415 ],\n            [ 2, 1.87395853247459, -0.518936581089064, 204, 268, 312, 325, 116, 240, 1.32804134436466 ],\n            [ 2, 1.57722802786687, 0.110277303527174, 169, 297, 312, 329, 191, 187, 0.285553978007817 ],\n            [ 2, 1.37910307146668, 0.578553678978533, 149, 277, 312, 335, 247, 172, 1.34608736010605 ],\n            [ 2, 1.3275522897486, -0.197894005805435, 184, 266, 313, 273, 150, 189, 0.0807443399495151 ],\n            [ 2, 1.88040554536005, -0.90081353932127, 209, 265, 313, 298, 68, 204, 0.953747421802817 ],\n            [ 2, 1.28658045764979, -0.0400762542168822, 196, 271, 314, 277, 168, 168, 0.241602669253489 ],\n            [ 2, 1.83425220653639, -0.32802195821907, 198, 271, 314, 330, 137, 169, 0.255287118464161 ],\n            [ 2, 1.82311104310748, -0.936387809066951, 199, 250, 315, 285, 61, 179, 1.04089448187548 ],\n            [ 2, 1.4972566940728, -0.207703192009422, 200, 260, 315, 292, 148, 198, 0.0536287806216663 ],\n            [ 2, 1.41146298651181, 0.391418482505592, 222, 276, 315, 322, 221, 223, 1.15453540485709 ],\n            [ 2, 1.5198693343594, -0.273567100161939, 194, 278, 316, 289, 139, 169, 0.165524747571574 ],\n            [ 2, 1.59382572062189, -0.08329483640403, 198, 265, 316, 312, 163, 150, 0.590141713723232 ],\n            [ 2, 1.73614291493763, -0.328399505121652, 140, 259, 316, 314, 134, 149, 0.644482007621899 ],\n            [ 2, 1.61201543736213, -0.270819906819659, 139, 248, 317, 300, 139, 150, 0.575868283247535 ],\n            [ 2, 1.34344315826069, 0.275246724258503, 198, 280, 317, 302, 204, 191, 0.346407334421258 ],\n            [ 2, 1.86264612802772, -0.710018995515924, 178, 269, 317, 303, 87, 200, 0.565870825522081 ],\n            [ 2, 1.42995259049198, 0.253313762274618, 194, 273, 317, 312, 202, 208, 0.501351339501181 ],\n            [ 2, 1.35427200213033, 0.615999969196682, 197, 274, 317, 327, 246, 202, 1.25972561749954 ],\n            [ 2, 0.652322652957681, -0.296659977899288, 199, 283, 318, 169, 127, 211, 2.13349838037391 ],\n            [ 2, 1.12696077599428, 0.322622279745286, 200, 274, 318, 275, 207, 196, 0.478115967857948 ],\n            [ 2, 1.70065247680361, -0.53613523286209, 167, 270, 318, 292, 106, 193, 0.268532500164347 ],\n            [ 2, 1.42918334094014, 0.0589018349257166, 147, 251, 318, 297, 177, 223, 0.59195280126882 ],\n            [ 2, 1.69485876327955, -0.438194359442801, 164, 258, 318, 298, 118, 192, 0.143617454992924 ],\n            [ 2, 1.72256005879326, -0.448140934420076, 183, 251, 318, 301, 117, 206, 0.28200421321392 ],\n            [ 2, 1.87468871912242, -0.46624675751469, 150, 260, 318, 320, 116, 177, 0.236471512059856 ],\n            [ 2, 2.14961515961158, -0.923299184136171, 183, 260, 318, 325, 62, 177, 1.07724875639024 ],\n            [ 2, 1.51990689502962, 0.151173185732013, 160, 255, 319, 314, 188, 163, 0.425208080057126 ],\n            [ 2, 1.54760819054334, 0.141226610754737, 192, 280, 319, 317, 187, 184, 0.193769751849102 ],\n            [ 2, 1.8245176278094, -0.218394895454788, 193, 282, 319, 329, 145, 175, 0.157052832027691 ],\n            [ 2, 1.405944295589, 0.102395194659443, 127, 249, 320, 294, 180, 183, 0.11612884823312 ],\n            [ 2, 0.492963531925893, 0.203573283754197, 163, 257, 321, 178, 184, 177, 1.77325337819642 ],\n            [ 2, 1.64081276396448, -0.343240837495085, 180, 267, 321, 293, 126, 161, 0.364469192112394 ],\n            [ 2, 1.63745897720989, -0.22106972222464, 167, 259, 321, 301, 141, 174, 0.0885639353151092 ],\n            [ 2, 1.89637506710455, -0.603901564270653, 179, 255, 321, 309, 96, 190, 0.386105813065729 ],\n            [ 2, 2.13928080640472, -0.912512821741198, 194, 252, 321, 320, 60, 199, 1.1125721613975 ],\n            [ 2, 1.74053920789933, -0.130268190908022, 206, 260, 321, 321, 153, 189, 0.0533002399379937 ],\n            [ 2, 1.21264566784621, 1.00190883899534, 184, 276, 321, 329, 288, 182, 2.38655453176567 ],\n            [ 2, 1.35302095794724, 0.0584042089584877, 196, 257, 322, 281, 172, 222, 0.579058893277354 ],\n            [ 2, 1.46188246984141, -0.16692738886923, 186, 253, 324, 277, 143, 211, 0.300452231721454 ],\n            [ 2, 1.89910244879461, -0.74844322795989, 181, 261, 324, 295, 75, 186, 0.720583563367628 ],\n            [ 2, 1.71165105945742, -0.329647242225509, 171, 265, 324, 299, 125, 205, 0.219614175711166 ],\n            [ 2, 1.34208506431453, 0.483204534384763, 171, 247, 324, 306, 222, 164, 0.844903006471768 ],\n            [ 2, 1.38340854258882, 0.504885011199249, 208, 284, 324, 313, 225, 201, 0.768635039568707 ],\n            [ 2, 1.99644072489554, -0.429622945005596, 207, 265, 324, 330, 115, 217, 0.618352202175025 ],\n            [ 2, 1.63291657158111, 0.204630430151655, 195, 276, 325, 324, 189, 209, 0.438309293068976 ],\n            [ 2, 1.71565637962743, -0.222899778908258, 141, 260, 326, 304, 136, 197, 0.0848203413249861 ],\n            [ 2, 1.5865044380797, 0.127032620161927, 237, 284, 326, 311, 178, 207, 0.273313917861215 ],\n            [ 2, 1.76089409251998, -0.136435339488245, 170, 263, 326, 316, 147, 176, 0.0987385123450268 ],\n            [ 2, 1.80724203476649, -0.407107663441949, 144, 233, 327, 302, 113, 167, 0.364472046569291 ],\n            [ 2, 1.83555553707942, -0.100021282324867, 226, 283, 327, 327, 151, 227, 0.728391130857995 ],\n            [ 2, 1.30134892820077, 0.342172502214538, 217, 281, 328, 285, 200, 189, 0.341768419398395 ],\n            [ 2, 2.04368832886186, -0.552034218405335, 128, 272, 328, 322, 96, 166, 0.629255357124369 ],\n            [ 2, 2.05801556991939, -0.674265373208103, 169, 261, 329, 314, 80, 196, 0.696563231867244 ],\n            [ 2, 2.05074754854653, -0.616878220543184, 166, 257, 329, 317, 87, 185, 0.563445651596691 ],\n            [ 2, 1.55243478291294, 0.342627398358086, 154, 272, 329, 317, 201, 215, 0.669466757359599 ],\n            [ 2, 1.91945556746927, -0.2417557131395, 169, 241, 330, 324, 131, 209, 0.332901883393376 ],\n            [ 2, 1.89424595766057, -0.0775010180926832, 180, 267, 330, 332, 151, 182, 0.155268312033958 ],\n            [ 2, 1.79136209633996, -0.379037955661418, 169, 246, 331, 296, 112, 210, 0.433026678821126 ],\n            [ 2, 1.65834767910952, 0.0361883590216268, 153, 276, 331, 307, 162, 225, 0.626347678844779 ],\n            [ 2, 1.6360866849984, 0.281550495577184, 203, 263, 331, 321, 192, 178, 0.324871916447218 ],\n            [ 2, 1.45646376489772, 0.829914406522617, 207, 291, 331, 335, 258, 196, 1.59078840430414 ],\n            [ 2, 1.15677397821907, 0.646973930504455, 171, 271, 332, 281, 232, 199, 0.934368947628847 ],\n            [ 2, 1.70952371595943, -0.316101359448151, 151, 275, 332, 288, 118, 186, 0.194762643217566 ],\n            [ 2, 1.87176549548792, -0.570642650135715, 162, 252, 332, 292, 88, 201, 0.611544000758892 ],\n            [ 2, 1.56243018597585, 0.140698582003931, 153, 274, 332, 300, 173, 198, 0.148626930147248 ],\n            [ 2, 1.73102612689206, -0.0248285042269512, 173, 259, 332, 311, 154, 166, 0.240934461512413 ],\n            [ 2, 1.46301429565428, 0.708193204727182, 180, 292, 332, 326, 242, 213, 1.38561814505353 ],\n            [ 2, 1.46758182963394, 0.489041082519791, 198, 254, 333, 310, 214, 223, 1.05098193690405 ],\n            [ 2, 1.63277222486001, 0.315607233340969, 184, 283, 333, 320, 194, 174, 0.388172681345535 ],\n            [ 2, 1.93499478980587, 0.0518867885213985, 187, 267, 333, 342, 164, 183, 0.266654736738022 ],\n            [ 2, 1.78688388196607, 0.39493233065831, 206, 284, 333, 346, 205, 178, 0.66480200672113 ],\n            [ 2, 1.68323253703961, -0.613871197659939, 176, 262, 334, 261, 79, 203, 0.951093955245643 ],\n            [ 2, 1.97834235741926, -0.429970855159432, 191, 280, 334, 313, 104, 169, 0.479433441009031 ],\n            [ 2, 1.49365177454624, 0.561161815533601, 223, 302, 334, 317, 222, 211, 0.922717230499919 ],\n            [ 2, 0.754344940653107, -0.178316767552944, 130, 259, 335, 166, 124, 181, 2.09158422750415 ],\n            [ 2, 1.72511469723158, 0.107619020431132, 186, 264, 335, 315, 167, 224, 0.655003558515252 ],\n            [ 2, 1.8072012059165, -0.035975103815864, 149, 272, 335, 316, 150, 189, 0.0914322884487305 ],\n            [ 2, 1.71540674908926, 0.140775931244896, 154, 245, 335, 316, 171, 217, 0.490061055912898 ],\n            [ 2, 1.8151742855863, -0.247220463075314, 204, 278, 336, 301, 123, 198, 0.21144713330829 ],\n            [ 2, 1.85354914816301, -0.306647427769568, 152, 264, 336, 302, 116, 156, 0.613076844503083 ],\n            [ 2, 2.11002531128822, -0.713709511666737, 169, 261, 336, 308, 68, 149, 1.50545927779952 ],\n            [ 2, 1.62140982742358, -0.518407722704889, 161, 242, 337, 255, 87, 186, 0.795101450735455 ],\n            [ 2, 1.50003283023083, 0.343869386758575, 154, 258, 338, 297, 191, 194, 0.296285519544408 ],\n            [ 2, 1.6240032650537, 0.408910817202036, 171, 256, 338, 318, 200, 179, 0.437105001222649 ],\n            [ 2, 1.70633790204301, 0.184659164921309, 155, 253, 339, 312, 172, 214, 0.444239820375217 ],\n            [ 2, 1.82491979439884, 0.144362912004874, 182, 262, 339, 325, 168, 240, 1.30195831458973 ],\n            [ 2, 1.98908037944935, -0.361017592214167, 204, 258, 341, 309, 105, 213, 0.638918816687687 ],\n            [ 2, 1.54814253524673, -0.0550211219811505, 204, 247, 342, 270, 138, 213, 0.49766535944658 ],\n            [ 2, 1.5500720071421, 0.425186583613033, 197, 263, 343, 302, 196, 157, 0.739542026461808 ],\n            [ 2, 2.07522396723983, -0.267786374925527, 191, 273, 343, 324, 115, 198, 0.391473343639459 ],\n            [ 2, 1.4797157699926, 0.544940339951561, 197, 269, 345, 298, 208, 184, 0.543577221305374 ],\n            [ 2, 1.54674334873838, 0.753905729052382, 212, 278, 348, 317, 231, 191, 0.988783660258389 ],\n            [ 2, 1.92134447422684, 0.379748070799579, 172, 280, 348, 341, 188, 208, 0.691687104050096 ],\n            [ 2, 1.71436123841458, 0.386509865999669, 204, 260, 350, 311, 185, 205, 0.475694315090084 ],\n            [ 2, 1.83801935367818, 0.183938690533428, 208, 288, 351, 312, 160, 201, 0.309666210317735 ],\n            [ 2, 1.43914813414142, 0.322824754317974, 192, 277, 374, 235, 149, 185, 1.02834818340157 ],\n            [ 2, 0.621315614060152, 0.125080693081523, 199, 283, 375, 111, 117, 199, 4.61338358989996 ],\n            [ 3, -2.12059919662355, -2.50824144593259, 196, 321, 42, 49, 131, 0, 1.05996943834671 ],\n            [ 3, -1.49910120993023, -2.78960049066313, 169, 221, 47, 105, 96, 0, 0.616094516398697 ],\n            [ 3, -1.25525471634806, -3.55091973848698, 154, 231, 51, 79, 0, 0, 1.49285343028189 ],\n            [ 3, -1.79232062131852, -2.63501523134398, 131, 229, 55, 65, 104, 19, 0.331671839718401 ],\n            [ 3, -0.866017034710368, -3.213659581394, 148, 293, 71, 125, 23, 0, 0.978861794970816 ],\n            [ 3, -1.68120435822597, -2.35400722450514, 207, 287, 73, 73, 120, 70, 1.01015915899794 ],\n            [ 3, -0.954967895944915, -2.93293867914185, 124, 251, 81, 118, 46, 0, 0.577281972879079 ],\n            [ 3, -1.36700489567408, -2.43920738314749, 150, 227, 86, 90, 98, 32, 0.0343071887871493 ],\n            [ 3, -1.23512733838228, -2.4208267825063, 149, 306, 90, 103, 97, 10, 0.120300090648545 ],\n            [ 3, -1.31275159690463, -2.24368587350285, 128, 217, 92, 102, 116, 0, 0.362086950731689 ],\n            [ 3, -1.12085215567018, -2.33427266680521, 214, 229, 97, 114, 101, 53, 0.397085842706116 ],\n            [ 3, -1.16481140265838, -2.62912094178112, 173, 251, 114, 63, 46, 23, 0.384627692909214 ],\n            [ 3, -0.843801112438407, -2.46867109324639, 130, 253, 118, 111, 64, 109, 3.05090275313 ],\n            [ 3, -1.54726939391401, -1.79520639338823, 146, 228, 120, 61, 139, 2, 0.75203666214927 ],\n            [ 3, -1.10125532680362, -2.26347778617106, 124, 244, 120, 88, 85, 0, 0.394008570521358 ],\n            [ 3, -0.823011982068851, -1.01494038255769, 128, 263, 204, 89, 150, 85, 4.02813833636957 ],\n            [ 4, -0.344506198486946, 0.942494644515006, 275, 353, 261, 205, 333, 278, 1.16866705521841 ],\n            [ 4, 0.36695525688358, 1.57306012448695, 166, 263, 277, 320, 399, 219, 2.31512152262491 ],\n            [ 4, 0.220661402640685, 0.892256033255002, 280, 348, 278, 252, 313, 330, 1.99287786548117 ],\n            [ 4, -0.181071406358273, 2.47738044560613, 159, 246, 287, 295, 495, 174, 6.68431791263199 ],\n            [ 4, 0.799165497554285, 0.52956171592654, 207, 312, 291, 285, 259, 244, 1.95557164881279 ],\n            [ 4, -0.450303855590289, 1.32079043428914, 325, 322, 294, 169, 343, 317, 1.79185195622676 ],\n            [ 4, -0.134996193342622, 1.62114465695488, 511, 398, 300, 223, 376, 332, 1.64762047116669 ],\n            [ 4, -0.149243015221745, 1.05429239334371, 181, 340, 302, 179, 304, 287, 1.20306485767573 ],\n            [ 4, 0.810214336909854, 1.14914576690093, 299, 326, 307, 306, 318, 270, 0.591971000854284 ],\n            [ 4, 0.56972189379448, 1.55845741817315, 323, 352, 312, 295, 361, 261, 0.293613333044607 ],\n            [ 4, -0.527003060329754, 1.62290394273427, 432, 361, 313, 152, 359, 303, 1.52361672758308 ],\n            [ 4, -0.387582722776045, 1.42676971072629, 170, 333, 313, 157, 336, 278, 1.15291551820481 ],\n            [ 4, 0.95427909572965, 1.07048532107285, 228, 323, 313, 311, 303, 255, 0.925351059426485 ],\n            [ 4, 0.952947632368163, 1.20197297924859, 214, 329, 315, 317, 317, 252, 0.868245578726145 ],\n            [ 4, 0.717452758928146, 1.62523846298433, 213, 292, 317, 312, 365, 160, 5.5607394362032 ],\n            [ 4, 0.798741621530573, 1.87655722673956, 447, 384, 324, 330, 389, 298, 0.946106235640603 ],\n            [ 4, 0.979826417160704, 1.15055478082345, 339, 351, 326, 301, 299, 271, 0.688480100703528 ],\n            [ 4, 0.179593003479366, 1.68051005004715, 328, 370, 335, 218, 348, 311, 0.720762745494146 ],\n            [ 4, -0.525986657282918, 1.56000356160649, 200, 267, 341, 107, 321, 304, 2.91093923011621 ],\n            [ 4, 1.10388343083397, 2.10661425833691, 511, 374, 358, 337, 383, 303, 1.25645711491138 ],\n            [ 4, 1.6998612541053, 1.20904263934288, 294, 311, 363, 347, 272, 266, 2.0587789157491 ],\n            [ 4, 0.979363478232986, 2.35582818786195, 175, 326, 366, 326, 404, 257, 1.10422786336514 ],\n            [ 4, 1.41707246633822, 2.79825172201976, 511, 508, 427, 326, 396, 281, 2.295542922968 ],\n            [ 4, 0.0314161055027324, 4.03415009131634, 423, 438, 462, 176, 499, 299, 6.1909598737492 ],\n            [ 4, -0.337248198262165, 4.25257177379878, 511, 450, 473, 126, 511, 295, 8.1599820289231 ],\n            [ 5, -1.99772929959068, -1.53167111343271, 173, 261, 68, 95, 224, 183, 2.46278472258031 ],\n            [ 5, -0.945887855100919, -2.70544795625498, 148, 268, 94, 116, 60, 216, 3.00690200844114 ],\n            [ 5, -1.39881829740868, -2.0002911824042, 188, 267, 95, 103, 142, 175, 1.36396370677958 ],\n            [ 5, -0.946058832406678, -2.51800100111515, 200, 268, 107, 110, 69, 210, 2.31028080684173 ],\n            [ 5, -0.122341513249591, -2.37623431258626, 194, 272, 108, 228, 92, 237, 4.01430558897995 ],\n            [ 5, -1.73791602501938, -1.65987850324829, 157, 266, 109, 61, 166, 207, 1.23028639729449 ],\n            [ 5, -1.41719318972, -1.33065674917317, 127, 245, 110, 125, 208, 177, 1.0482083238771 ],\n            [ 5, -1.77057732953824, -1.23914547484058, 149, 249, 115, 77, 211, 176, 1.0738331967668 ],\n            [ 5, -0.989614937996046, -2.27343668818844, 183, 265, 116, 108, 89, 202, 1.54894412956735 ],\n            [ 5, -0.87353892961056, -2.17337865349885, 198, 257, 119, 126, 99, 172, 1.35850783907325 ],\n            [ 5, -1.30736579519296, -1.80214830718529, 182, 278, 121, 91, 139, 193, 0.736240940911644 ],\n            [ 5, -1.05515904475347, -1.4277832552898, 200, 268, 122, 149, 186, 192, 0.739467880553767 ],\n            [ 5, -1.40003478538912, -1.56711029250959, 188, 271, 123, 92, 165, 215, 0.852403491051774 ],\n            [ 5, -0.186371721829818, -1.80797801772111, 203, 272, 125, 234, 143, 174, 2.29240435402718 ],\n            [ 5, -1.04461386020025, -2.17380391289365, 191, 280, 126, 93, 90, 206, 1.41661351555814 ],\n            [ 5, -1.34571552941879, -1.53617331232214, 198, 250, 126, 97, 166, 179, 0.530765496003585 ],\n            [ 5, -1.47944743726552, -1.18528104676961, 184, 242, 127, 102, 207, 134, 1.81003365396092 ],\n            [ 5, -1.14644278299441, -1.93684616525326, 191, 252, 130, 90, 114, 173, 0.931436082797305 ],\n            [ 5, -0.680402378746165, -1.64154376016864, 189, 288, 131, 171, 153, 194, 0.826757698696248 ],\n            [ 5, -1.34152803814527, -1.34549884758144, 131, 252, 132, 102, 183, 169, 0.550024320937299 ],\n            [ 5, -1.24664035518715, -1.78195572560396, 177, 273, 133, 83, 129, 208, 0.800515364704666 ],\n            [ 5, -1.09884353285261, -1.87975921024996, 162, 255, 135, 93, 116, 176, 0.780553658192924 ],\n            [ 5, -0.855886034616893, -2.05829258950212, 208, 287, 135, 113, 96, 211, 1.2041953806345 ],\n            [ 5, -1.40808775681293, -1.12645447739859, 161, 306, 137, 101, 204, 209, 0.61512643413463 ],\n            [ 5, -1.0675420882259, -1.5796797651308, 192, 244, 137, 115, 151, 205, 0.455217616442108 ],\n            [ 5, -1.75911062309411, -0.834484206201515, 163, 245, 138, 73, 236, 168, 1.12613841255684 ],\n            [ 5, -0.119043992131907, -1.77942875971682, 171, 298, 138, 226, 133, 217, 2.2036368215123 ],\n            [ 5, -0.283175916939557, -2.0932095521301, 194, 276, 139, 181, 92, 199, 1.59104619621775 ],\n            [ 5, -1.84552896977365, -0.770587743505906, 127, 226, 140, 63, 241, 176, 1.16866834500994 ],\n            [ 5, -0.504186506569416, -1.91479625194259, 166, 279, 141, 161, 110, 219, 1.33247570481858 ],\n            [ 5, -1.1880925153811, -2.16131332158307, 171, 285, 143, 50, 72, 152, 2.31935180243123 ],\n            [ 5, -1.43135343274874, -1.00649096571434, 209, 278, 144, 96, 211, 165, 0.649444088021325 ],\n            [ 5, -1.25402759493022, -1.40704373958082, 156, 242, 146, 89, 161, 167, 0.4274128312045 ],\n            [ 5, -0.932492651570815, -1.99723376246469, 144, 268, 146, 91, 91, 178, 1.03456647245092 ],\n            [ 5, -0.405254176825084, -2.33262004415452, 137, 263, 146, 138, 54, 182, 1.92755587944075 ],\n            [ 5, -1.47762272176284, -0.912047396773961, 145, 234, 147, 92, 219, 166, 0.698541583326584 ],\n            [ 5, -0.338869231067359, -1.10867165111512, 179, 277, 147, 230, 204, 210, 2.02089168581464 ],\n            [ 5, -1.16447846144959, -1.30590575934424, 170, 248, 148, 105, 172, 145, 0.918576995526101 ],\n            [ 5, -0.794300259507498, -1.80172457986015, 215, 269, 148, 120, 114, 226, 1.12367094398976 ],\n            [ 5, -1.08570641290306, -1.41544314582745, 143, 268, 150, 105, 157, 196, 0.190136436376596 ],\n            [ 5, -0.727925980123124, -1.30882310594642, 183, 267, 150, 160, 173, 166, 0.603339483973369 ],\n            [ 5, -1.40451220862641, -1.48264945003343, 198, 272, 152, 55, 144, 195, 0.556743060167835 ],\n            [ 5, -0.822654590670417, -1.73767840135115, 167, 270, 156, 109, 113, 219, 0.86473373677438 ],\n            [ 5, -0.793336142820609, -1.53502987664395, 234, 274, 158, 124, 136, 214, 0.49941426705691 ],\n            [ 5, -0.767578517467587, -1.73052174953984, 203, 261, 160, 111, 110, 207, 0.642842177422037 ],\n            [ 5, -1.14396980225609, -0.638821091149882, 134, 294, 163, 132, 238, 210, 0.835899402968714 ],\n            [ 5, -1.08294120683058, -1.36508100490393, 264, 369, 165, 87, 147, 259, 2.15378912010104 ],\n            [ 5, -1.59289315844785, -0.339771517382462, 193, 226, 165, 90, 269, 136, 2.36115220745585 ],\n            [ 5, -1.17799659891467, -1.53705001726161, 118, 326, 166, 61, 124, 149, 1.17455632368146 ],\n            [ 5, -1.05966460080922, -0.9838340787437, 182, 245, 166, 115, 193, 158, 0.46226455814827 ],\n            [ 5, -1.2411900985084, -1.22198450662416, 253, 263, 169, 70, 159, 231, 0.936029109965532 ],\n            [ 5, -1.0132773319465, -1.34262078020407, 221, 292, 169, 92, 146, 229, 0.78617300465005 ],\n            [ 5, -0.75213011697054, -1.70867922987185, 191, 260, 170, 100, 102, 264, 2.88128106097383 ],\n            [ 5, -1.01475340574127, -0.870319837557823, 174, 277, 170, 123, 203, 174, 0.242507661239283 ],\n            [ 5, 0.072695665594527, -1.41119464131607, 219, 269, 173, 226, 142, 203, 1.61245318923615 ],\n            [ 5, -0.749052855050987, -1.16086800175744, 148, 268, 175, 131, 164, 204, 0.149329842265505 ],\n            [ 5, -0.949030396060115, -0.836173423512969, 188, 346, 179, 121, 198, 231, 0.830798769081704 ],\n            [ 5, -0.709896046890897, -1.03752726465893, 223, 355, 181, 136, 173, 232, 0.83090536762752 ],\n            [ 5, -0.626699308852005, -1.53825815227964, 200, 258, 182, 111, 111, 181, 0.452042583178815 ],\n            [ 5, -0.166047447070803, -1.34829343055492, 159, 264, 183, 184, 137, 177, 0.765102805506195 ],\n            [ 5, -1.44912952538958, -0.41467061255696, 186, 271, 189, 69, 235, 171, 0.832389909946709 ],\n            [ 5, -1.34983311715043, -0.434803920640804, 190, 266, 193, 75, 229, 197, 0.617581470574231 ],\n            [ 5, -0.762820886766442, -0.798500068240461, 247, 372, 193, 128, 189, 234, 0.939472672025288 ],\n            [ 5, -1.25524708737824, -0.407826485447368, 201, 268, 194, 88, 232, 176, 0.6168467377322 ],\n            [ 5, -1.00888404345237, -0.578453101751587, 157, 250, 194, 109, 213, 192, 0.264721276555217 ],\n            [ 5, -1.45353975290441, -0.547976000376213, 165, 241, 196, 49, 211, 185, 0.661405914152588 ],\n            [ 5, -0.941203165345191, -0.653423797463682, 197, 268, 198, 107, 200, 187, 0.169827524664652 ],\n            [ 5, -1.00383445112927, -0.664257872350873, 184, 262, 200, 95, 196, 207, 0.319032600057405 ],\n            [ 5, -0.829707123258704, -0.552405896291749, 179, 261, 202, 123, 209, 179, 0.322137312552975 ],\n            [ 5, -0.307753673108924, -0.732974104904706, 210, 264, 202, 180, 191, 210, 0.841780484527933 ],\n            [ 5, -1.00674550615663, -0.320625027965663, 195, 272, 203, 114, 235, 172, 0.714093665157053 ],\n            [ 5, -0.960345804974563, -0.461219473700981, 137, 234, 204, 109, 217, 207, 0.508785651703632 ],\n            [ 5, -1.02867971873095, -0.332149174457158, 171, 258, 208, 103, 228, 186, 0.554464954034784 ],\n            [ 5, -0.620885237390627, -0.350759967890569, 129, 249, 208, 156, 229, 210, 0.966665538847033 ],\n            [ 5, -0.437556884359869, -0.841796765703405, 265, 269, 209, 145, 169, 224, 0.784711631194852 ],\n            [ 5, -1.19474464732594, -0.100428345663396, 164, 239, 210, 94, 253, 142, 1.88330887057647 ],\n            [ 5, -1.29204359681066, -0.50736300612435, 170, 251, 212, 50, 200, 135, 1.82383873669002 ],\n            [ 5, -1.26435649956228, -0.22264717342606, 186, 269, 215, 69, 232, 193, 0.874919556466525 ],\n            [ 5, -0.862473447882441, -0.108810442201386, 201, 314, 218, 126, 246, 178, 1.02054474056482 ],\n            [ 5, -0.734495926943567, -0.449876211841287, 166, 267, 219, 118, 204, 195, 0.429961119171203 ],\n            [ 5, -0.646305151121296, 0.0890560598027417, 180, 325, 219, 167, 271, 180, 1.86967918907091 ],\n            [ 5, -1.15038120409011, -0.185513407909632, 125, 259, 221, 78, 231, 137, 1.9145690831179 ],\n            [ 5, -0.83011353283731, -0.295945638674328, 152, 258, 221, 113, 220, 149, 1.21750291633292 ],\n            [ 5, -0.579131195996239, -0.555646498967551, 172, 234, 222, 127, 189, 170, 0.516757462219507 ],\n            [ 5, -0.927205446579843, -0.182568786261739, 170, 243, 223, 105, 231, 161, 1.07657454703798 ],\n            [ 5, -0.744790953534214, -0.527204226952975, 186, 245, 224, 104, 189, 176, 0.44880635169059 ],\n            [ 5, -1.37811179954851, 0.0190498670937247, 192, 250, 225, 56, 250, 185, 1.45256637958513 ],\n            [ 5, -0.932502903495132, -0.245942968909911, 185, 242, 225, 97, 221, 126, 2.24449884869408 ],\n            [ 5, -0.866126858164771, -0.265896158396785, 139, 275, 226, 103, 218, 181, 0.675836866245272 ],\n            [ 5, -0.59171087254971, -0.266971121275239, 192, 267, 227, 138, 219, 168, 0.921456597215762 ],\n            [ 5, -0.843044591854062, -0.416604970666244, 205, 262, 234, 84, 191, 197, 0.666312904582572 ],\n            [ 5, -1.24021903101292, -0.0646977817675856, 208, 267, 235, 54, 230, 183, 1.31579826582899 ],\n            [ 5, -0.788570059077088, 0.00456564417637129, 182, 274, 237, 116, 240, 171, 1.28002484657948 ],\n            [ 5, -0.633712251111884, -0.670936506008092, 223, 340, 239, 87, 156, 237, 1.63552857585692 ],\n            [ 5, -0.811352174435663, -0.0251416746507029, 218, 271, 239, 108, 234, 183, 1.11082136861803 ],\n            [ 5, -0.491930376308924, -0.89644822243278, 179, 255, 244, 83, 124, 165, 1.27253205026655 ],\n            [ 5, -0.669205957425681, -0.0827993882284925, 187, 244, 252, 104, 214, 172, 1.24017072911916 ],\n            [ 5, -0.421929053514688, -0.399827361654313, 146, 239, 252, 115, 177, 167, 1.08632241909329 ],\n            [ 5, -0.387719294615994, -0.107180877962703, 204, 270, 280, 99, 183, 192, 1.7549513435147 ],\n            [ 5, 0.103259756156078, -1.07455129602306, 186, 265, 292, 80, 55, 194, 3.88062080699927 ],\n            [ 5, 0.310984372413926, -0.757249311085496, 156, 255, 313, 99, 73, 201, 4.25212639293289 ],\n            [ 5, 0.375977195447254, -0.775792720615017, 178, 257, 316, 102, 68, 207, 4.57885628586495 ],\n            [ 5, 0.255018329055259, -0.35827487476807, 182, 258, 333, 90, 100, 147, 5.32253899768015 ],\n            [ 5, 0.370663063223459, -0.438141093911153, 182, 264, 359, 62, 63, 165, 7.32553995982501 ],\n            [ 6, -2.07113425139223, 0.163120793401895, 180, 238, 128, 115, 367, 188, 3.7551614859549 ],\n            [ 6, -1.96501405574125, 0.14715678565779, 164, 242, 139, 112, 354, 170, 4.19147138597703 ],\n            [ 6, -1.30535124668099, -0.147904372401692, 201, 284, 164, 143, 296, 190, 1.96568573158611 ],\n            [ 6, -1.46849065827109, -0.784315276949894, 281, 352, 169, 70, 211, 254, 1.77624983432999 ],\n            [ 6, -0.843535366952082, -0.9276896805141, 226, 378, 174, 136, 193, 262, 1.70291898164053 ],\n            [ 6, -1.16599660261596, -0.409290556233678, 199, 306, 176, 126, 252, 244, 0.610737248815018 ],\n            [ 6, -0.974489636406991, -0.308243018312998, 230, 299, 188, 141, 253, 254, 0.436265503666563 ],\n            [ 6, -1.13621003097583, -0.00846875352399135, 192, 314, 195, 130, 281, 242, 0.183121356431257 ],\n            [ 6, -1.52597007238256, -0.567616665161366, 189, 361, 196, 38, 208, 251, 1.98072600127961 ],\n            [ 6, -1.49267319865961, 0.0480859560947984, 182, 308, 196, 85, 284, 246, 0.412954877139881 ],\n            [ 6, -1.11772042699566, -0.146573473754964, 203, 333, 197, 120, 262, 255, 0.284840391505287 ],\n            [ 6, -0.983742156790534, -0.065268603940611, 144, 317, 198, 142, 272, 263, 0.276620927505742 ],\n            [ 6, -1.00444842387446, -0.468436165044618, 153, 366, 201, 107, 219, 234, 0.882824270896295 ],\n            [ 6, -1.02081218659043, -0.0608591454715785, 243, 327, 201, 133, 269, 227, 0.326505201022988 ],\n            [ 6, -1.12720687741826, -0.117603939024412, 230, 312, 203, 112, 259, 223, 0.500251517946822 ],\n            [ 6, -1.1951625144145, 0.114494436671933, 219, 318, 203, 119, 287, 247, 0.112647660448199 ],\n            [ 6, -1.14972843215311, -0.00977653016017044, 207, 335, 204, 115, 271, 241, 0.182629944734457 ],\n            [ 6, -1.17590366088249, 0.170801643789861, 185, 318, 204, 124, 293, 279, 0.490766648464198 ],\n            [ 6, -0.927100690187159, 0.0244052693367971, 151, 322, 204, 147, 277, 225, 0.319785279986984 ],\n            [ 6, -2.19607702516813, 0.8399843086152, 165, 237, 205, 33, 366, 195, 2.94819198053314 ],\n            [ 6, -0.903979360972443, 0.0154185608418658, 222, 332, 205, 148, 275, 209, 0.711259517480457 ],\n            [ 6, -1.1676824529083, -0.12110124350332, 248, 328, 206, 102, 255, 242, 0.34446896097708 ],\n            [ 6, -1.34690020195196, 0.223984110662927, 163, 312, 206, 102, 296, 230, 0.298972967267661 ],\n            [ 6, -1.18028725781265, -0.038973895979912, 224, 312, 206, 106, 265, 247, 0.231827038130655 ],\n            [ 6, -0.84878557163319, -0.0119314385856151, 252, 311, 206, 152, 271, 267, 0.30171042221144 ],\n            [ 6, -0.686336756362509, 0.253838783600364, 233, 304, 206, 192, 305, 286, 1.04395078909567 ],\n            [ 6, -1.12895594415611, -0.00102997979453345, 160, 317, 207, 114, 269, 248, 0.160780358699327 ],\n            [ 6, -0.903431345428123, -0.0158186170072101, 274, 333, 207, 143, 269, 254, 0.143090903017642 ],\n            [ 6, -1.06700282237211, -0.142644331544519, 152, 311, 208, 111, 251, 208, 0.923479975181512 ],\n            [ 6, -1.41960528031917, 0.361471125862024, 197, 319, 210, 96, 308, 254, 0.249914974894844 ],\n            [ 6, -1.02736421958078, 0.34388023844328, 222, 321, 210, 147, 309, 259, 0.152458494502123 ],\n            [ 6, -1.4835538311994, 0.187462301475006, 215, 345, 211, 74, 285, 253, 0.440491292507198 ],\n            [ 6, -0.476808046251491, -0.2112281579936, 169, 311, 212, 179, 243, 255, 0.549794689267724 ],\n            [ 6, -0.974165859337766, 0.000907062878797049, 278, 306, 213, 126, 264, 244, 0.126971670860132 ],\n            [ 6, -1.18057621496703, 0.412816191679903, 223, 310, 213, 127, 313, 269, 0.278772081847703 ],\n            [ 6, -1.14458952022424, 0.45923686335288, 187, 312, 213, 135, 319, 247, 0.122514637294716 ],\n            [ 6, -1.14297060194216, 0.158977299636748, 198, 298, 214, 113, 281, 244, 0.0872583109142912 ],\n            [ 6, -0.690302486204112, -0.170859538504736, 246, 361, 215, 149, 243, 239, 0.350533636725321 ],\n            [ 6, -0.60618122180674, -0.0869448641213917, 204, 318, 215, 166, 254, 269, 0.481211078689068 ],\n            [ 6, -1.08549392858607, 0.278478570805878, 207, 325, 216, 126, 294, 226, 0.206133344429051 ],\n            [ 6, -1.12142886439332, 0.362135777351288, 159, 328, 216, 127, 304, 240, 0.0633245469051232 ],\n            [ 6, -0.890162311076817, 0.119328388500936, 225, 319, 216, 141, 276, 258, 0.0931812186429026 ],\n            [ 6, -0.741034025380789, -0.109962754320805, 270, 335, 216, 145, 249, 248, 0.242725868605382 ],\n            [ 6, -0.889666054468044, -0.0419866675665257, 255, 282, 218, 127, 254, 214, 0.626518556882566 ],\n            [ 6, -0.8191152138957, 0.140378833243442, 179, 313, 218, 149, 277, 234, 0.128343726231458 ],\n            [ 6, -0.742692006566877, 0.0485747056207986, 207, 319, 222, 147, 262, 207, 0.773184987293135 ],\n            [ 6, -1.20929639057076, 0.592026549461432, 185, 285, 223, 121, 324, 228, 0.302263561083663 ],\n            [ 6, -0.397527045064645, -0.493724826100416, 275, 380, 223, 154, 197, 260, 1.18221766860982 ],\n            [ 6, -1.40580242868887, 0.760043361196659, 198, 323, 224, 105, 342, 253, 0.421224827466286 ],\n            [ 6, -0.690146945685269, -0.0104623851307686, 269, 319, 224, 147, 253, 233, 0.275952944049058 ],\n            [ 6, -0.751291491301217, 0.237449516461458, 247, 318, 224, 156, 283, 253, 0.0719292119205009 ],\n            [ 6, -0.902766852268968, -0.028380745256845, 210, 326, 225, 116, 248, 255, 0.283595642607611 ],\n            [ 6, -1.07415613207612, 0.446272534120453, 283, 330, 225, 126, 305, 261, 0.105662599685397 ],\n            [ 6, -0.910845215755855, 0.435563520966446, 208, 320, 225, 147, 305, 264, 0.152480869443891 ],\n            [ 6, -1.19299858505567, 0.349034059345572, 277, 330, 226, 102, 291, 250, 0.113589866322643 ],\n            [ 6, -0.965294620181949, 0.220940936292735, 195, 298, 227, 122, 276, 280, 0.469774707506436 ],\n            [ 6, -0.995841013522149, 0.409935826198042, 224, 312, 227, 131, 299, 248, 0.00941194985631821 ],\n            [ 6, -0.711103107019573, 0.179882245199568, 230, 342, 227, 153, 273, 252, 0.086228875033264 ],\n            [ 6, -0.867303044719615, 0.255825134434112, 238, 368, 228, 136, 280, 242, 0.0274273361612228 ],\n            [ 6, -0.814288621526102, 0.341779620846792, 217, 335, 228, 149, 291, 272, 0.267475367574759 ],\n            [ 6, -0.737944067429695, 0.42620424823747, 237, 317, 228, 165, 302, 240, 0.139083572605337 ],\n            [ 6, -0.908274876818425, 0.413642886022666, 222, 311, 229, 140, 298, 242, 0.0230307649003275 ],\n            [ 6, -0.738008258684582, 0.0779341142940373, 260, 271, 230, 138, 257, 207, 0.796497182897464 ],\n            [ 6, -0.92591657801434, 0.569930778589217, 140, 306, 230, 147, 316, 252, 0.105741458640615 ],\n            [ 6, -1.3962888202572, 0.19493071195321, 241, 342, 231, 57, 265, 240, 0.745933589570337 ],\n            [ 6, -0.983262839202466, 0.404278630625152, 275, 329, 232, 125, 293, 261, 0.0908693278180408 ],\n            [ 6, -1.12975482876019, 0.447064609045932, 249, 322, 233, 107, 296, 247, 0.0913154262767343 ],\n            [ 6, -0.830834291633377, 0.435593157715193, 265, 319, 233, 146, 297, 250, 0.0313848210503043 ],\n            [ 6, -1.02495216191757, 0.497762333083189, 188, 333, 234, 123, 302, 249, 0.0410821397338437 ],\n            [ 6, -0.669872216530825, 0.442617403421755, 191, 334, 235, 165, 297, 233, 0.203331527886551 ],\n            [ 6, -0.821752748555594, 0.380065698482638, 193, 314, 236, 139, 287, 239, 0.050467317591905 ],\n            [ 6, -0.815907276095983, 0.412202703281734, 208, 318, 236, 142, 291, 244, 0.0292078704645432 ],\n            [ 6, -0.67638342067118, 0.476224227710528, 222, 327, 236, 165, 300, 230, 0.250194150690277 ],\n            [ 6, -0.509261787603755, 0.270143420725276, 218, 325, 236, 173, 276, 257, 0.244024849536724 ],\n            [ 6, -0.728287614510723, 0.0331329779241321, 200, 266, 237, 126, 244, 206, 0.98142981494883 ],\n            [ 6, -0.824858407005803, 0.421579285719353, 183, 335, 237, 140, 291, 263, 0.123393724887814 ],\n            [ 6, -1.03163284112989, 0.435797930392372, 208, 329, 238, 112, 290, 242, 0.0899944582607728 ],\n            [ 6, -0.697130780317304, 0.674025707513795, 271, 345, 238, 173, 322, 258, 0.349705083065782 ],\n            [ 6, -0.830612793913659, 0.431405781631981, 178, 325, 239, 137, 290, 232, 0.125381583645603 ],\n            [ 6, -0.789746245631932, 0.526286937007269, 242, 324, 239, 149, 302, 268, 0.239013119714573 ],\n            [ 6, -0.660947716205673, 0.509710972934656, 197, 315, 239, 165, 301, 237, 0.186960589938744 ],\n            [ 6, -0.804542849001364, 0.503526514645791, 222, 319, 240, 144, 298, 261, 0.125684925490972 ],\n            [ 6, -0.510659208166117, 0.566215608358196, 244, 330, 241, 186, 307, 262, 0.444398632165198 ],\n            [ 6, -0.507253662475973, 0.574122371306136, 333, 348, 241, 187, 308, 288, 1.03462388637089 ],\n            [ 6, -0.871950470453278, 0.70438771249306, 188, 340, 242, 146, 320, 273, 0.425831839000538 ],\n            [ 6, -0.818439790650993, 0.629027142838277, 187, 315, 244, 145, 309, 259, 0.163270811051148 ],\n            [ 6, -0.698344263830168, 0.541170233169552, 208, 326, 246, 152, 297, 244, 0.112874503498448 ],\n            [ 6, -0.705560526267473, 0.728635264052857, 244, 335, 246, 164, 320, 274, 0.55174494010033 ],\n            [ 6, -1.04504772443608, 0.694645910192964, 282, 336, 247, 115, 312, 260, 0.23411297145038 ],\n            [ 6, -0.515670976106802, 0.846924183570245, 309, 350, 247, 196, 335, 277, 1.0735961274428 ],\n            [ 6, -1.21339553704791, 0.779515468390115, 241, 328, 248, 97, 320, 234, 0.406062351755903 ],\n            [ 6, -0.901870195016743, 0.685916669535968, 159, 325, 248, 132, 311, 259, 0.187937161700483 ],\n            [ 6, -0.912857847585001, 0.980639116743857, 195, 331, 250, 148, 345, 265, 0.600444654012777 ],\n            [ 6, -0.848725359655267, 0.725720279153711, 166, 316, 252, 136, 312, 236, 0.222884449217533 ],\n            [ 6, -0.852587835337976, 0.79101419476657, 282, 345, 252, 140, 320, 249, 0.2244617800696 ],\n            [ 6, -0.737359729736744, 0.872889057120581, 194, 327, 252, 161, 331, 259, 0.443501780115919 ],\n            [ 6, -1.0880416162158, 0.613310637595033, 278, 332, 255, 92, 293, 250, 0.338950370077335 ],\n            [ 6, -1.01698208671534, 0.852553338062587, 214, 332, 255, 118, 323, 254, 0.31585683232594 ],\n            [ 6, -0.669573567812479, 0.545219454444645, 255, 327, 255, 143, 288, 240, 0.176359336262518 ],\n            [ 6, -0.126444224554665, 0.682973902818752, 219, 334, 259, 219, 305, 237, 1.02446031134862 ],\n            [ 6, -0.70376093911567, 0.795320883879599, 266, 338, 261, 147, 312, 258, 0.32751427680251 ],\n            [ 6, -0.457294377318711, 0.884850024012151, 171, 337, 261, 186, 325, 291, 1.40110431265275 ],\n            [ 6, -0.777770850259694, 0.987825405303916, 158, 338, 262, 149, 334, 262, 0.557525009752247 ],\n            [ 6, -0.889111351827338, 1.04720465750595, 121, 325, 267, 131, 335, 267, 0.679689335756376 ],\n            [ 6, -0.652259886674954, 0.69899954576338, 218, 330, 268, 137, 293, 250, 0.306506192391039 ],\n            [ 6, -0.519443604759343, 1.00736330073307, 268, 330, 268, 176, 332, 259, 0.748752429294013 ],\n            [ 6, -1.07032452996724, 1.0766668355352, 269, 322, 269, 106, 335, 253, 0.650430732168412 ],\n            [ 6, -1.12375655653711, 0.975798650176655, 200, 322, 271, 89, 320, 263, 0.765517209570604 ],\n            [ 6, -0.541377817333664, 0.995839154241569, 273, 323, 273, 165, 325, 257, 0.657767464968493 ],\n            [ 6, -0.680838720025169, 1.33326946459444, 323, 340, 290, 145, 347, 270, 1.29745917913359 ],\n            [ 6, -0.525618335798932, 1.33847598065749, 230, 344, 301, 150, 337, 256, 1.27098463381407 ]\n        ]; break;\n        \n        // Foods and their attributes.  Simplified Food Journal, from JMP(r) software (http://www.jmp.com).\n        case \"Food\": data = [\n            [ \"Sugar\", 21, 0, 6, 0 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Beef\", 162, 12, 0, 1 ],\n            [ \"Coffee\", 43, 0, 6, 4 ],\n            [ \"Beans\", 45, 0, 9, 3 ],\n            [ \"Vegetable\", 32, 0, 7, 1 ],\n            [ \"Vegetable\", 23, 0, 4, 1 ],\n            [ \"Fats\", 30, 3, 0, 0 ],\n            [ \"Coffee\", 43, 0, 6, 4 ],\n            [ \"Seafood\", 27, 0, 0, 5 ],\n            [ \"Candy\", 50, 3, 4, 1 ],\n            [ \"Supplement\", 190, 9, 13, 1 ],\n            [ \"Fruit\", 220, 2, 44, 4 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Vegetable\", 26, 0, 5, 1 ],\n            [ \"Cheese\", 22, 2, 0, 2 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Vegetable\", 35, 0, 6, 2 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Coffee\", 43, 0, 6, 4 ],\n            [ \"Chocolate\", 155, 9, 17, 1 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Seed\", 40, 3, 3, 2 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Cheese\", 60, 3, 1, 8 ],\n            [ \"Seed\", 40, 3, 3, 2 ],\n            [ \"Grain\", 101, 2, 18, 4 ],\n            [ \"Egg\", 16, 0, 0, 4 ],\n            [ \"Egg\", 71, 5, 0, 6 ],\n            [ \"Fruit\", 73, 6, 5, 1 ],\n            [ \"Chocolate\", 54, 1, 11, 0 ],\n            [ \"Vegetable\", 9, 0, 0, 3 ],\n            [ \"Pork\", 139, 4, 1, 2 ],\n            [ \"Chocolate\", 102, 6, 9, 2 ],\n            [ \"Creamer\", 70, 3, 10, 0 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Milk\", 42, 0, 6, 4 ],\n            [ \"Fruit\", 165, 2, 33, 3 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Vegetable\", 18, 0, 3, 1 ],\n            [ \"Cheese\", 22, 2, 0, 2 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Corn\", 93, 1, 19, 3 ],\n            [ \"Chocolate\", 161, 9, 18, 2 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Supplement\", 120, 2, 3, 2 ],\n            [ \"Milk\", 42, 0, 6, 4 ],\n            [ \"Yogurt\", 140, 4, 28, 2 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Fruit\", 26, 0, 7, 0 ],\n            [ \"Bread\", 234, 1, 47, 8 ],\n            [ \"Fruit\", 20, 2, 1, 0 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Fruit\", 25, 2, 1, 0 ],\n            [ \"Cheese\", 45, 4, 1, 4 ],\n            [ \"Dressing\", 38, 4, 1, 0 ],\n            [ \"Supplement\", 200, 6, 16, 2 ],\n            [ \"Cake\", 250, 8, 43, 2 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Fruit\", 50, 4, 2, 0 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Beans\", 109, 0, 20, 7 ],\n            [ \"Vegetable\", 35, 0, 6, 2 ],\n            [ \"Vegetable\", 13, 0, 3, 1 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Fish\", 93, 1, 0, 2 ],\n            [ \"Milk\", 83, 0, 12, 8 ],\n            [ \"Candy\", 150, 10, 13, 4 ],\n            [ \"Chocolate\", 133, 5, 18, 3 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Chocolate\", 78, 4, 9, 1 ],\n            [ \"Nuts\", 83, 7, 3, 3 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Egg\", 63, 0, 1, 1 ],\n            [ \"Vegetable\", 40, 0, 6, 4 ],\n            [ \"Vegetable\", 9, 0, 2, 0 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Cheese\", 56, 5, 0, 4 ],\n            [ \"Egg\", 71, 5, 0, 6 ],\n            [ \"Beans\", 110, 1, 17, 6 ],\n            [ \"Fish\", 117, 1, 0, 2 ],\n            [ \"Cheese\", 56, 5, 0, 4 ],\n            [ \"Vegetable\", 17, 0, 4, 1 ],\n            [ \"Fruit\", 32, 0, 8, 0 ],\n            [ \"Dressing\", 68, 7, 1, 0 ],\n            [ \"Vegetable\", 50, 0, 12, 1 ],\n            [ \"Vegetable\", 35, 0, 6, 2 ],\n            [ \"Vegetable\", 22, 0, 5, 1 ],\n            [ \"Vegetable\", 6, 0, 1, 0 ],\n            [ \"Vegetable\", 22, 0, 5, 1 ],\n            [ \"Sauce\", 27, 0, 7, 1 ],\n            [ \"Seafood\", 180, 3, 2, 3 ],\n            [ \"Vegetable\", 24, 0, 5, 2 ],\n            [ \"Alcohol\", 200, 0, 4, 1 ],\n            [ \"Pasta\", 233, 1, 49, 8 ],\n            [ \"Cheese\", 11, 1, 0, 1 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Vegetable\", 22, 0, 5, 1 ],\n            [ \"Cookie\", 110, 5, 13, 2 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Yogurt\", 60, 0, 5, 1 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Juice\", 56, 0, 13, 1 ],\n            [ \"Coffee\", 2, 0, 0, 0 ],\n            [ \"Milk\", 122, 5, 11, 8 ],\n            [ \"Fruit\", 64, 0, 16, 1 ],\n            [ \"Egg\", 32, 0, 0, 7 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Vegetable\", 4, 0, 1, 0 ],\n            [ \"Cheese\", 56, 5, 0, 4 ],\n            [ \"Vegetable\", 3, 0, 0, 1 ],\n            [ \"Egg\", 71, 5, 0, 6 ],\n            [ \"Alcohol\", 200, 0, 4, 1 ],\n            [ \"Cheese\", 41, 0, 10, 1 ],\n            [ \"Dressing\", 24, 0, 5, 1 ],\n            [ \"Vegetable\", 75, 7, 2, 0 ],\n            [ \"Cookie\", 45, 4, 1, 4 ],\n            [ \"Coffee\", 30, 0, 5, 2 ],\n            [ \"Fruit\", 151, 8, 0, 1 ],\n            [ \"Yogurt\", 6, 0, 1, 0 ],\n            [ \"Coffee\", 100, 7, 9, 3 ],\n            [ \"Juice\", 25, 0, 7, 0 ],\n            [ \"Coffee\", 122, 5, 11, 8 ],\n            [ \"Milk\", 385, 27, 31, 7 ],\n            [ \"Fruit\", 50, 0, 13, 0 ],\n            [ \"Egg\", 70, 6, 1, 3 ],\n            [ \"Coffee\", 30, 0, 8, 0 ],\n            [ \"Vegetable\", 186, 10, 3, 2 ],\n            [ \"Cheese\", 49, 2, 5, 3 ],\n            [ \"Vegetable\", 120, 2, 3, 2 ],\n            [ \"Egg\", 36, 0, 10, 0 ],\n            [ \"Pasta\", 50, 3, 4, 1 ],\n            [ \"Cheese\", 23, 0, 4, 1 ],\n            [ \"Dressing\", 38, 0, 10, 0 ],\n            [ \"Vegetable\", 160, 2, 24, 1 ],\n            [ \"Cookie\", 103, 1, 18, 6 ],\n            [ \"Coffee\", 50, 3, 4, 1 ],\n            [ \"Fruit\", 200, 8, 18, 1 ],\n            [ \"Yogurt\", 22, 0, 4, 2 ],\n            [ \"Coffee\", 124, 1, 0, 2 ],\n            [ \"Juice\", 43, 0, 10, 2 ],\n            [ \"Coffee\", 46, 1, 10, 2 ],\n            [ \"Milk\", 75, 7, 2, 0 ],\n            [ \"Fruit\", 31, 0, 8, 0 ],\n            [ \"Egg\", 220, 1, 44, 8 ],\n            [ \"Coffee\", 6, 0, 1, 0 ],\n            [ \"Vegetable\", 22, 0, 5, 1 ],\n            [ \"Cheese\", 330, 9, 63, 3 ],\n            [ \"Vegetable\", 150, 10, 13, 4 ],\n            [ \"Egg\", 103, 1, 18, 6 ],\n            [ \"Pasta\", 155, 9, 17, 1 ],\n            [ \"Cheese\", 0, 0, 0, 0 ],\n            [ \"Dressing\", 36, 0, 10, 0 ],\n            [ \"Vegetable\", 23, 0, 4, 1 ],\n            [ \"Cookie\", 45, 0, 3, 8 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Fruit\", 60, 0, 16, 0 ],\n            [ \"Yogurt\", 15, 1, 0, 0 ],\n            [ \"Coffee\", 56, 0, 13, 1 ],\n            [ \"Coffee\", 103, 1, 18, 6 ],\n            [ \"Cheese\", 186, 10, 3, 2 ],\n            [ \"Beans\", 70, 6, 3, 1 ],\n            [ \"Pasta\", 90, 2, 4, 1 ],\n            [ \"Bread\", 206, 1, 42, 7 ],\n            [ \"Fats\", 20, 2, 0, 0 ],\n            [ \"Candy\", 100, 7, 9, 3 ],\n            [ \"Chocolate\", 155, 9, 17, 1 ],\n            [ \"Supplement\", 200, 8, 18, 1 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Alcohol\", 157, 0, 7, 0 ],\n            [ \"Vegetable\", 16, 0, 0, 4 ],\n            [ \"Vegetable\", 66, 1, 13, 6 ],\n            [ \"Beans\", 50, 0, 10, 4 ],\n            [ \"Cheese\", 43, 3, 0, 4 ],\n            [ \"Vegetable\", 27, 0, 5, 0 ],\n            [ \"Cheese\", 80, 5, 4, 5 ],\n            [ \"Fats\", 20, 2, 0, 0 ],\n            [ \"Vegetable\", 45, 0, 10, 1 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Sugar\", 21, 0, 6, 0 ],\n            [ \"Supplement\", 60, 1, 2, 1 ],\n            [ \"Yogurt\", 65, 0, 5, 1 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Vegetable\", 50, 0, 10, 1 ],\n            [ \"Cheese\", 42, 2, 2, 3 ],\n            [ \"Vegetable\", 157, 1, 22, 2 ],\n            [ \"Beans\", 100, 0, 20, 8 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Supplement\", 120, 2, 3, 2 ],\n            [ \"Fruit\", 51, 0, 14, 0 ],\n            [ \"Yogurt\", 140, 4, 28, 2 ],\n            [ \"Chocolate\", 155, 9, 17, 1 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Vegetable\", 30, 0, 8, 0 ],\n            [ \"Vegetable\", 20, 0, 0, 0 ],\n            [ \"Egg\", 48, 0, 1, 1 ],\n            [ \"Cheese\", 85, 5, 3, 7 ],\n            [ \"Vegetable\", 33, 0, 6, 3 ],\n            [ \"Vegetable\", 16, 0, 0, 4 ],\n            [ \"Sugar\", 50, 0, 13, 0 ],\n            [ \"Cheese\", 57, 5, 0, 4 ],\n            [ \"Yogurt\", 32, 0, 2, 6 ],\n            [ \"Cheese\", 130, 3, 22, 3 ],\n            [ \"Egg\", 71, 5, 0, 6 ],\n            [ \"Cookie\", 264, 13, 34, 3 ],\n            [ \"Milk\", 104, 0, 15, 1 ],\n            [ \"Sugar\", 98, 3, 19, 0 ],\n            [ \"Chocolate\", 140, 7, 18, 2 ],\n            [ \"Candy\", 100, 7, 9, 3 ],\n            [ \"Chocolate\", 66, 2, 14, 0 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Egg\", 63, 0, 1, 1 ],\n            [ \"Vegetable\", 60, 0, 16, 0 ],\n            [ \"Drink\", 0, 0, 0, 0 ],\n            [ \"Vegetable\", 5, 0, 1, 0 ],\n            [ \"Coffee\", 32, 0, 5, 3 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Cheese\", 42, 2, 2, 3 ],\n            [ \"Egg\", 71, 5, 0, 6 ],\n            [ \"Pasta\", 180, 4, 8, 2 ],\n            [ \"Vegetable\", 45, 0, 0, 0 ],\n            [ \"Fats\", 39, 4, 0, 0 ],\n            [ \"Vegetable\", 66, 1, 13, 6 ],\n            [ \"Coffee\", 32, 0, 5, 3 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Cheese\", 42, 2, 2, 3 ],\n            [ \"Vegetable\", 15, 0, 3, 1 ],\n            [ \"Coffee\", 42, 0, 6, 4 ],\n            [ \"Poultry\", 153, 1, 0, 3 ],\n            [ \"Fruit\", 75, 6, 3, 0 ],\n            [ \"Cheese\", 25, 2, 0, 1 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Vegetable\", 21, 0, 3, 3 ],\n            [ \"Vegetable\", 31, 0, 7, 1 ],\n            [ \"Vegetable\", 47, 0, 8, 3 ],\n            [ \"Fruit\", 26, 0, 7, 0 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Vegetable\", 6, 0, 1, 0 ],\n            [ \"Coffee\", 48, 2, 5, 3 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Yogurt\", 130, 0, 9, 2 ],\n            [ \"Nuts\", 103, 9, 3, 4 ],\n            [ \"Coffee\", 49, 2, 5, 3 ],\n            [ \"Vegetable\", 60, 0, 16, 0 ],\n            [ \"Juice\", 42, 0, 10, 1 ],\n            [ \"Cheese\", 149, 8, 2, 1 ],\n            [ \"Cheese\", 45, 2, 7, 2 ],\n            [ \"Coffee\", 48, 2, 5, 3 ],\n            [ \"Pasta\", 180, 4, 18, 1 ],\n            [ \"Cheese\", 45, 2, 7, 2 ],\n            [ \"Vegetable\", 100, 0, 20, 3 ],\n            [ \"Supplement\", 200, 8, 18, 1 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Vegetable\", 25, 0, 0, 0 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Vegetable\", 31, 0, 7, 1 ],\n            [ \"Cheese\", 19, 2, 0, 1 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Fish\", 104, 1, 0, 2 ],\n            [ \"Fats\", 20, 2, 0, 0 ],\n            [ \"Vegetable\", 41, 0, 7, 5 ],\n            [ \"Coffee\", 42, 0, 6, 4 ],\n            [ \"Fruit\", 36, 0, 10, 0 ],\n            [ \"Nuts\", 85, 7, 3, 3 ],\n            [ \"Coffee\", 32, 0, 5, 3 ],\n            [ \"Yogurt\", 135, 0, 9, 2 ],\n            [ \"Fruit\", 40, 0, 9, 2 ],\n            [ \"Yogurt\", 43, 1, 7, 2 ],\n            [ \"Sugar\", 21, 0, 6, 0 ],\n            [ \"Bread\", 160, 5, 29, 2 ],\n            [ \"Cheese\", 80, 5, 4, 5 ],\n            [ \"Yogurt\", 68, 0, 5, 1 ],\n            [ \"Vegetable\", 25, 0, 0, 0 ],\n            [ \"Vegetable\", 22, 0, 4, 2 ],\n            [ \"Cheese\", 45, 2, 7, 2 ],\n            [ \"Fish\", 89, 1, 0, 1 ],\n            [ \"Vegetable\", 46, 1, 10, 2 ],\n            [ \"Vegetable\", 50, 3, 7, 1 ],\n            [ \"Vegetable\", 10, 0, 2, 1 ],\n            [ \"Dressing\", 75, 7, 2, 0 ],\n            [ \"Beans\", 100, 0, 20, 8 ],\n            [ \"Coffee\", 42, 0, 6, 4 ],\n            [ \"Fish\", 138, 1, 0, 3 ],\n            [ \"Vegetable\", 12, 0, 2, 1 ],\n            [ \"Cheese\", 42, 3, 0, 4 ],\n            [ \"Vegetable\", 50, 1, 10, 3 ],\n            [ \"Fats\", 179, 20, 0, 0 ],\n            [ \"Alcohol\", 118, 0, 6, 0 ],\n            [ \"Dressing\", 40, 4, 0, 0 ],\n            [ \"Coffee\", 102, 1, 18, 6 ],\n            [ \"Coffee\", 48, 2, 5, 3 ]\n        ]; break;\n        \n        // US Car Sales (https://www.goodcarbadcar.net/2022-us-passenger-car-sales-figures-by-model/).\n        case \"Sales\": data = [\n            [ \"Toyota Camry\", 19665 ],\n            [ \"Toyota Camry\", 15612 ],\n            [ \"Toyota Camry\", 26228 ],\n            [ \"Toyota Corolla\", 15368 ],\n            [ \"Toyota Corolla\", 15222 ],\n            [ \"Toyota Corolla\", 16911 ],\n            [ \"Honda Accord\", 10410 ],\n            [ \"Honda Accord\", 13971 ],\n            [ \"Honda Accord\", 17658 ],\n            [ \"Tesla Model 3\", 13739 ],\n            [ \"Tesla Model 3\", 13230 ],\n            [ \"Tesla Model 3\", 13230 ],\n            [ \"Honda Civic\", 13599 ],\n            [ \"Honda Civic\", 14472 ],\n            [ \"Honda Civic\", 10444 ],\n            [ \"Nissan Altima\", 12254 ],\n            [ \"Nissan Altima\", 12254 ],\n            [ \"Nissan Altima\", 13786 ],\n            [ \"Nissan Sentra\", 8682 ],\n            [ \"Nissan Sentra\", 8682 ],\n            [ \"Nissan Sentra\", 9767 ],\n            [ \"Chevrolet Malibu\", 8218 ],\n            [ \"Chevrolet Malibu\", 8218 ],\n            [ \"Chevrolet Malibu\", 9246 ],\n            [ \"Kia Forte\", 5748 ],\n            [ \"Kia Forte\", 8141 ],\n            [ \"Kia Forte\", 9609 ],\n            [ \"Hyundai Elantra\", 5081 ],\n            [ \"Hyundai Elantra\", 6786 ],\n            [ \"Hyundai Elantra\", 10205 ],\n            [ \"Kia K5\", 5794 ],\n            [ \"Kia K5\", 6558 ],\n            [ \"Kia K5\", 5470 ],\n            [ \"Dodge Charger\", 4940 ],\n            [ \"Dodge Charger\", 4940 ],\n            [ \"Dodge Charger\", 5558 ],\n            [ \"Kia Soul\", 3890 ],\n            [ \"Kia Soul\", 5059 ],\n            [ \"Kia Soul\", 5175 ],\n            [ \"Ford Mustang\", 5671 ],\n            [ \"Ford Mustang\", 4700 ],\n            [ \"Ford Mustang\", 3615 ],\n            [ \"Tesla Model S\", 3930 ],\n            [ \"Tesla Model S\", 3785 ],\n            [ \"Tesla Model S\", 3785 ],\n            [ \"Dodge Challenger\", 3560 ],\n            [ \"Dodge Challenger\", 3560 ],\n            [ \"Dodge Challenger\", 4005 ],\n            [ \"Volkswagen Jetta\", 3481 ],\n            [ \"Volkswagen Jetta\", 3481 ],\n            [ \"Volkswagen Jetta\", 3916 ],\n            [ \"Lexus ES\", 2944 ],\n            [ \"Lexus ES\", 3284 ],\n            [ \"Lexus ES\", 3823 ],\n            [ \"Mazda 3\", 3470 ],\n            [ \"Mazda 3\", 2969 ],\n            [ \"Mazda 3\", 3053 ],\n            [ \"Chevrolet Corvette\", 2820 ],\n            [ \"Chevrolet Corvette\", 2820 ],\n            [ \"Chevrolet Corvette\", 3172 ],\n            [ \"Subaru Impreza\", 2939 ],\n            [ \"Subaru Impreza\", 3520 ],\n            [ \"Subaru Impreza\", 2329 ],\n            [ \"BMW 3-Series\", 2610 ],\n            [ \"BMW 3-Series\", 2610 ],\n            [ \"BMW 3-Series\", 2936 ],\n            [ \"BMW 4-Series\", 2361 ],\n            [ \"BMW 4-Series\", 2361 ],\n            [ \"BMW 4-Series\", 2656 ],\n            [ \"Toyota Prius Family\", 0 ],\n            [ \"Toyota Prius Family\", 3080 ],\n            [ \"Toyota Prius Family\", 3631 ],\n            [ \"Chevrolet Camaro\", 2147 ],\n            [ \"Chevrolet Camaro\", 2147 ],\n            [ \"Chevrolet Camaro\", 2416 ],\n            [ \"Kia Rio\", 1633 ],\n            [ \"Kia Rio\", 2045 ],\n            [ \"Kia Rio\", 2829 ],\n            [ \"BMW 5-Series\", 1806 ],\n            [ \"BMW 5-Series\", 1806 ],\n            [ \"BMW 5-Series\", 2032 ],\n            [ \"Subaru Legacy\", 1492 ],\n            [ \"Subaru Legacy\", 1417 ],\n            [ \"Subaru Legacy\", 2611 ],\n            [ \"Mitsubishi Mirage\", 1573 ],\n            [ \"Mitsubishi Mirage\", 1573 ],\n            [ \"Mitsubishi Mirage\", 1770 ],\n            [ \"Mercedes-Benz S\", 1541 ],\n            [ \"Mercedes-Benz S\", 1541 ],\n            [ \"Mercedes-Benz S\", 1734 ],\n            [ \"Hyundai Sonata\", 0 ],\n            [ \"Hyundai Sonata\", 3037 ],\n            [ \"Hyundai Sonata\", 1716 ],\n            [ \"Mercedes-Benz E / CLS\", 1514 ],\n            [ \"Mercedes-Benz E / CLS\", 1514 ],\n            [ \"Mercedes-Benz E / CLS\", 1703 ],\n            [ \"Lexus IS\", 1708 ],\n            [ \"Lexus IS\", 1184 ],\n            [ \"Lexus IS\", 1570 ],\n            [ \"Nissan Leaf\", 1399 ],\n            [ \"Nissan Leaf\", 1399 ],\n            [ \"Nissan Leaf\", 1574 ],\n            [ \"BMW 2-Series\", 1288 ],\n            [ \"BMW 2-Series\", 1288 ],\n            [ \"BMW 2-Series\", 1449 ],\n            [ \"Mini Cooper\", 1241 ],\n            [ \"Mini Cooper\", 1241 ],\n            [ \"Mini Cooper\", 1396 ],\n            [ \"Audi A4\", 1233 ],\n            [ \"Audi A4\", 1233 ],\n            [ \"Audi A4\", 1387 ],\n            [ \"Audi A5\", 1229 ],\n            [ \"Audi A5\", 1229 ],\n            [ \"Audi A5\", 1383 ],\n            [ \"Acura ILX\", 1045 ],\n            [ \"Acura ILX\", 1223 ],\n            [ \"Acura ILX\", 1493 ],\n            [ \"Hyundai Ioniq\", 1415 ],\n            [ \"Hyundai Ioniq\", 1269 ],\n            [ \"Hyundai Ioniq\", 860 ],\n            [ \"Cadillac CT5\", 1070 ],\n            [ \"Cadillac CT5\", 1070 ],\n            [ \"Cadillac CT5\", 1203 ],\n            [ \"Toyota GR86\", 1331 ],\n            [ \"Toyota GR86\", 925 ],\n            [ \"Toyota GR86\", 1001 ],\n            [ \"Kia Stinger\", 991 ],\n            [ \"Kia Stinger\", 1090 ],\n            [ \"Kia Stinger\", 1026 ],\n            [ \"Acura TLX\", 224 ],\n            [ \"Acura TLX\", 985 ],\n            [ \"Acura TLX\", 1782 ],\n            [ \"Genesis G70\", 681 ],\n            [ \"Genesis G70\", 895 ],\n            [ \"Genesis G70\", 1297 ],\n            [ \"Nissan Maxima\", 918 ],\n            [ \"Nissan Maxima\", 918 ],\n            [ \"Nissan Maxima\", 1033 ],\n            [ \"Volvo 60-Series\", 1263 ],\n            [ \"Volvo 60-Series\", 592 ],\n            [ \"Volvo 60-Series\", 965 ],\n            [ \"Chrysler 300\", 878 ],\n            [ \"Chrysler 300\", 878 ],\n            [ \"Chrysler 300\", 988 ],\n            [ \"Hyundai Accent\", 507 ],\n            [ \"Hyundai Accent\", 744 ],\n            [ \"Hyundai Accent\", 1446 ],\n            [ \"Infiniti Q50\", 777 ],\n            [ \"Infiniti Q50\", 777 ],\n            [ \"Infiniti Q50\", 874 ],\n            [ \"Volkswagen Passat\", 750 ],\n            [ \"Volkswagen Passat\", 750 ],\n            [ \"Volkswagen Passat\", 844 ],\n            [ \"Nissan Versa\", 746 ],\n            [ \"Nissan Versa\", 746 ],\n            [ \"Nissan Versa\", 839 ],\n            [ \"Volkswagen Golf\", 743 ],\n            [ \"Volkswagen Golf\", 743 ],\n            [ \"Volkswagen Golf\", 836 ],\n            [ \"Toyota Avalon\", 892 ],\n            [ \"Toyota Avalon\", 537 ],\n            [ \"Toyota Avalon\", 726 ],\n            [ \"Porsche 911\", 682 ],\n            [ \"Porsche 911\", 682 ],\n            [ \"Porsche 911\", 768 ],\n            [ \"Porsche Taycan\", 616 ],\n            [ \"Porsche Taycan\", 616 ],\n            [ \"Porsche Taycan\", 693 ],\n            [ \"Cadillac CT4\", 606 ],\n            [ \"Cadillac CT4\", 606 ],\n            [ \"Cadillac CT4\", 681 ],\n            [ \"Honda Insight\", 556 ],\n            [ \"Honda Insight\", 546 ],\n            [ \"Honda Insight\", 763 ],\n            [ \"Mazda MX-5 Miata\", 386 ],\n            [ \"Mazda MX-5 Miata\", 556 ],\n            [ \"Mazda MX-5 Miata\", 663 ],\n            [ \"BMW 7-Series\", 479 ],\n            [ \"BMW 7-Series\", 479 ],\n            [ \"BMW 7-Series\", 539 ],\n            [ \"BMW 8-Series\", 448 ],\n            [ \"BMW 8-Series\", 448 ],\n            [ \"BMW 8-Series\", 504 ],\n            [ \"Audi A3\", 438 ],\n            [ \"Audi A3\", 438 ],\n            [ \"Audi A3\", 492 ],\n            [ \"Audi A6\", 408 ],\n            [ \"Audi A6\", 408 ],\n            [ \"Audi A6\", 459 ],\n            [ \"Alfa Romeo Giulia\", 366 ],\n            [ \"Alfa Romeo Giulia\", 366 ],\n            [ \"Alfa Romeo Giulia\", 412 ],\n            [ \"Mercedes-Benz A\", 360 ],\n            [ \"Mercedes-Benz A\", 360 ],\n            [ \"Mercedes-Benz A\", 405 ],\n            [ \"Toyota Supra\", 370 ],\n            [ \"Toyota Supra\", 298 ],\n            [ \"Toyota Supra\", 439 ],\n            [ \"Mercedes-Benz CLA\", 340 ],\n            [ \"Mercedes-Benz CLA\", 340 ],\n            [ \"Mercedes-Benz CLA\", 383 ],\n            [ \"Genesis G80\", 405 ],\n            [ \"Genesis G80\", 263 ],\n            [ \"Genesis G80\", 380 ],\n            [ \"Subaru BRZ\", 331 ],\n            [ \"Subaru BRZ\", 349 ],\n            [ \"Subaru BRZ\", 291 ],\n            [ \"Mercedes-Benz AMG GT\", 301 ],\n            [ \"Mercedes-Benz AMG GT\", 301 ],\n            [ \"Mercedes-Benz AMG GT\", 339 ],\n            [ \"Porsche Panamera\", 252 ],\n            [ \"Porsche Panamera\", 252 ],\n            [ \"Porsche Panamera\", 283 ],\n            [ \"Porsche 718\", 250 ],\n            [ \"Porsche 718\", 250 ],\n            [ \"Porsche 718\", 282 ],\n            [ \"Infiniti Q60\", 246 ],\n            [ \"Infiniti Q60\", 246 ],\n            [ \"Infiniti Q60\", 276 ],\n            [ \"Toyota Mirai\", 134 ],\n            [ \"Toyota Mirai\", 175 ],\n            [ \"Toyota Mirai\", 406 ],\n            [ \"Audi e-Tron Sportback\", 209 ],\n            [ \"Audi e-Tron Sportback\", 209 ],\n            [ \"Audi e-Tron Sportback\", 234 ],\n            [ \"Lexus LS\", 203 ],\n            [ \"Lexus LS\", 200 ],\n            [ \"Lexus LS\", 186 ],\n            [ \"Subaru Impreza WRX\", 341 ],\n            [ \"Subaru Impreza WRX\", 31 ],\n            [ \"Subaru Impreza WRX\", 204 ],\n            [ \"Audi e-Tron GT\", 183 ],\n            [ \"Audi e-Tron GT\", 183 ],\n            [ \"Audi e-Tron GT\", 206 ],\n            [ \"Audi A7\", 161 ],\n            [ \"Audi A7\", 161 ],\n            [ \"Audi A7\", 181 ],\n            [ \"Volvo 90-Series\", 154 ],\n            [ \"Volvo 90-Series\", 147 ],\n            [ \"Volvo 90-Series\", 197 ],\n            [ \"Mercedes-Benz C\", 158 ],\n            [ \"Mercedes-Benz C\", 158 ],\n            [ \"Mercedes-Benz C\", 178 ],\n            [ \"Lexus RC\", 159 ],\n            [ \"Lexus RC\", 137 ],\n            [ \"Lexus RC\", 165 ],\n            [ \"Lexus LC\", 146 ],\n            [ \"Lexus LC\", 143 ],\n            [ \"Lexus LC\", 153 ],\n            [ \"Genesis G90\", 187 ],\n            [ \"Genesis G90\", 145 ],\n            [ \"Genesis G90\", 97 ],\n            [ \"Hyundai Veloster\", 86 ],\n            [ \"Hyundai Veloster\", 171 ],\n            [ \"Hyundai Veloster\", 171 ],\n            [ \"Jaguar F-Type\", 128 ],\n            [ \"Jaguar F-Type\", 128 ],\n            [ \"Jaguar F-Type\", 144 ],\n            [ \"Jaguar XF\", 128 ],\n            [ \"Jaguar XF\", 128 ],\n            [ \"Jaguar XF\", 144 ],\n            [ \"Chevrolet Bolt\", 115 ],\n            [ \"Chevrolet Bolt\", 115 ],\n            [ \"Chevrolet Bolt\", 129 ],\n            [ \"Fiat 500\", 107 ],\n            [ \"Fiat 500\", 107 ],\n            [ \"Fiat 500\", 120 ],\n            [ \"Mazda 6\", 256 ],\n            [ \"Mazda 6\", 55 ],\n            [ \"Mazda 6\", 14 ],\n            [ \"BMW Z4\", 89 ],\n            [ \"BMW Z4\", 89 ],\n            [ \"BMW Z4\", 100 ],\n            [ \"Chevrolet Spark\", 89 ],\n            [ \"Chevrolet Spark\", 89 ],\n            [ \"Chevrolet Spark\", 100 ],\n            [ \"Audi A8\", 75 ],\n            [ \"Audi A8\", 75 ],\n            [ \"Audi A8\", 84 ],\n            [ \"Audi TT\", 39 ],\n            [ \"Audi TT\", 39 ],\n            [ \"Audi TT\", 44 ],\n            [ \"Audi R8\", 22 ],\n            [ \"Audi R8\", 22 ],\n            [ \"Audi R8\", 24 ],\n            [ \"Acura NSX\", 0 ],\n            [ \"Acura NSX\", 21 ],\n            [ \"Acura NSX\", 25 ]\n        ]; break;\n        \n        // Fisher's Iris data (https://en.wikipedia.org/wiki/Iris_flower_data_set).\n        default: data = [\n            [ \"versicolor\", 7, 3.2, 4.7, 1.4 ],\n            [ \"versicolor\", 6.4, 3.2, 4.5, 1.5 ],\n            [ \"versicolor\", 6.9, 3.1, 4.9, 1.5 ],\n            [ \"versicolor\", 5.5, 2.3, 4, 1.3 ],\n            [ \"versicolor\", 6.5, 2.8, 4.6, 1.5 ],\n            [ \"versicolor\", 5.7, 2.8, 4.5, 1.3 ],\n            [ \"versicolor\", 6.3, 3.3, 4.7, 1.6 ],\n            [ \"versicolor\", 4.9, 2.4, 3.3, 1 ],\n            [ \"versicolor\", 6.6, 2.9, 4.6, 1.3 ],\n            [ \"versicolor\", 5.2, 2.7, 3.9, 1.4 ],\n            [ \"versicolor\", 5, 2, 3.5, 1 ],\n            [ \"versicolor\", 5.9, 3, 4.2, 1.5 ],\n            [ \"versicolor\", 6, 2.2, 4, 1 ],\n            [ \"versicolor\", 6.1, 2.9, 4.7, 1.4 ],\n            [ \"versicolor\", 5.6, 2.9, 3.6, 1.3 ],\n            [ \"versicolor\", 6.7, 3.1, 4.4, 1.4 ],\n            [ \"versicolor\", 5.6, 3, 4.5, 1.5 ],\n            [ \"versicolor\", 5.8, 2.7, 4.1, 1 ],\n            [ \"versicolor\", 6.2, 2.2, 4.5, 1.5 ],\n            [ \"versicolor\", 5.6, 2.5, 3.9, 1.1 ],\n            [ \"versicolor\", 5.9, 3.2, 4.8, 1.8 ],\n            [ \"versicolor\", 6.1, 2.8, 4, 1.3 ],\n            [ \"versicolor\", 6.3, 2.5, 4.9, 1.5 ],\n            [ \"versicolor\", 6.1, 2.8, 4.7, 1.2 ],\n            [ \"versicolor\", 6.4, 2.9, 4.3, 1.3 ],\n            [ \"versicolor\", 6.6, 3, 4.4, 1.4 ],\n            [ \"versicolor\", 6.8, 2.8, 4.8, 1.4 ],\n            [ \"versicolor\", 6.7, 3, 5, 1.7 ],\n            [ \"versicolor\", 6, 2.9, 4.5, 1.5 ],\n            [ \"versicolor\", 5.7, 2.6, 3.5, 1 ],\n            [ \"versicolor\", 5.5, 2.4, 3.8, 1.1 ],\n            [ \"versicolor\", 5.5, 2.4, 3.7, 1 ],\n            [ \"versicolor\", 5.8, 2.7, 3.9, 1.2 ],\n            [ \"versicolor\", 6, 2.7, 5.1, 1.6 ],\n            [ \"versicolor\", 5.4, 3, 4.5, 1.5 ],\n            [ \"versicolor\", 6, 3.4, 4.5, 1.6 ],\n            [ \"versicolor\", 6.7, 3.1, 4.7, 1.5 ],\n            [ \"versicolor\", 6.3, 2.3, 4.4, 1.3 ],\n            [ \"versicolor\", 5.6, 3, 4.1, 1.3 ],\n            [ \"versicolor\", 5.5, 2.5, 4, 1.3 ],\n            [ \"versicolor\", 5.5, 2.6, 4.4, 1.2 ],\n            [ \"versicolor\", 6.1, 3, 4.6, 1.4 ],\n            [ \"versicolor\", 5.8, 2.6, 4, 1.2 ],\n            [ \"versicolor\", 5, 2.3, 3.3, 1 ],\n            [ \"versicolor\", 5.6, 2.7, 4.2, 1.3 ],\n            [ \"versicolor\", 5.7, 3, 4.2, 1.2 ],\n            [ \"versicolor\", 5.7, 2.9, 4.2, 1.3 ],\n            [ \"versicolor\", 6.2, 2.9, 4.3, 1.3 ],\n            [ \"versicolor\", 5.1, 2.5, 3, 1.1 ],\n            [ \"versicolor\", 5.7, 2.8, 4.1, 1.3 ],\n            [ \"virginica\", 6.3, 3.3, 6, 2.5 ],\n            [ \"virginica\", 5.8, 2.7, 5.1, 1.9 ],\n            [ \"virginica\", 7.1, 3, 5.9, 2.1 ],\n            [ \"virginica\", 6.3, 2.9, 5.6, 1.8 ],\n            [ \"virginica\", 6.5, 3, 5.8, 2.2 ],\n            [ \"virginica\", 7.6, 3, 6.6, 2.1 ],\n            [ \"virginica\", 4.9, 2.5, 4.5, 1.7 ],\n            [ \"virginica\", 7.3, 2.9, 6.3, 1.8 ],\n            [ \"virginica\", 6.7, 2.5, 5.8, 1.8 ],\n            [ \"virginica\", 7.2, 3.6, 6.1, 2.5 ],\n            [ \"virginica\", 6.5, 3.2, 5.1, 2 ],\n            [ \"virginica\", 6.4, 2.7, 5.3, 1.9 ],\n            [ \"virginica\", 6.8, 3, 5.5, 2.1 ],\n            [ \"virginica\", 5.7, 2.5, 5, 2 ],\n            [ \"virginica\", 5.8, 2.8, 5.1, 2.4 ],\n            [ \"virginica\", 6.4, 3.2, 5.3, 2.3 ],\n            [ \"virginica\", 6.5, 3, 5.5, 1.8 ],\n            [ \"virginica\", 7.7, 3.8, 6.7, 2.2 ],\n            [ \"virginica\", 7.7, 2.6, 6.9, 2.3 ],\n            [ \"virginica\", 6, 2.2, 5, 1.5 ],\n            [ \"virginica\", 6.9, 3.2, 5.7, 2.3 ],\n            [ \"virginica\", 5.6, 2.8, 4.9, 2 ],\n            [ \"virginica\", 7.7, 2.8, 6.7, 2 ],\n            [ \"virginica\", 6.3, 2.7, 4.9, 1.8 ],\n            [ \"virginica\", 6.7, 3.3, 5.7, 2.1 ],\n            [ \"virginica\", 7.2, 3.2, 6, 1.8 ],\n            [ \"virginica\", 6.2, 2.8, 4.8, 1.8 ],\n            [ \"virginica\", 6.1, 3, 4.9, 1.8 ],\n            [ \"virginica\", 6.4, 2.8, 5.6, 2.1 ],\n            [ \"virginica\", 7.2, 3, 5.8, 1.6 ],\n            [ \"virginica\", 7.4, 2.8, 6.1, 1.9 ],\n            [ \"virginica\", 7.9, 3.8, 6.4, 2 ],\n            [ \"virginica\", 6.4, 2.8, 5.6, 2.2 ],\n            [ \"virginica\", 6.3, 2.8, 5.1, 1.5 ],\n            [ \"virginica\", 6.1, 2.6, 5.6, 1.4 ],\n            [ \"virginica\", 7.7, 3, 6.1, 2.3 ],\n            [ \"virginica\", 6.3, 3.4, 5.6, 2.4 ],\n            [ \"virginica\", 6.4, 3.1, 5.5, 1.8 ],\n            [ \"virginica\", 6, 3, 4.8, 1.8 ],\n            [ \"virginica\", 6.9, 3.1, 5.4, 2.1 ],\n            [ \"virginica\", 6.7, 3.1, 5.6, 2.4 ],\n            [ \"virginica\", 6.9, 3.1, 5.1, 2.3 ],\n            [ \"virginica\", 5.8, 2.7, 5.1, 1.9 ],\n            [ \"virginica\", 6.8, 3.2, 5.9, 2.3 ],\n            [ \"virginica\", 6.7, 3.3, 5.7, 2.5 ],\n            [ \"virginica\", 6.7, 3, 5.2, 2.3 ],\n            [ \"virginica\", 6.3, 2.5, 5, 1.9 ],\n            [ \"virginica\", 6.5, 3, 5.2, 2 ],\n            [ \"virginica\", 6.2, 3.4, 5.4, 2.3 ],\n            [ \"virginica\", 5.9, 3, 5.1, 1.8 ],\n            [ \"setosa\", 5.1, 3.5, 1.4, 0.2 ],\n            [ \"setosa\", 4.9, 3, 1.4, 0.2 ],\n            [ \"setosa\", 4.7, 3.2, 1.3, 0.2 ],\n            [ \"setosa\", 4.6, 3.1, 1.5, 0.2 ],\n            [ \"setosa\", 5, 3.6, 1.4, 0.2 ],\n            [ \"setosa\", 5.4, 3.9, 1.7, 0.4 ],\n            [ \"setosa\", 4.6, 3.4, 1.4, 0.3 ],\n            [ \"setosa\", 5, 3.4, 1.5, 0.2 ],\n            [ \"setosa\", 4.4, 2.9, 1.4, 0.2 ],\n            [ \"setosa\", 4.9, 3.1, 1.5, 0.1 ],\n            [ \"setosa\", 5.4, 3.7, 1.5, 0.2 ],\n            [ \"setosa\", 4.8, 3.4, 1.6, 0.2 ],\n            [ \"setosa\", 4.8, 3, 1.4, 0.1 ],\n            [ \"setosa\", 4.3, 3, 1.1, 0.1 ],\n            [ \"setosa\", 5.8, 4, 1.2, 0.2 ],\n            [ \"setosa\", 5.7, 4.4, 1.5, 0.4 ],\n            [ \"setosa\", 5.4, 3.9, 1.3, 0.4 ],\n            [ \"setosa\", 5.1, 3.5, 1.4, 0.3 ],\n            [ \"setosa\", 5.7, 3.8, 1.7, 0.3 ],\n            [ \"setosa\", 5.1, 3.8, 1.5, 0.3 ],\n            [ \"setosa\", 5.4, 3.4, 1.7, 0.2 ],\n            [ \"setosa\", 5.1, 3.7, 1.5, 0.4 ],\n            [ \"setosa\", 4.6, 3.6, 1, 0.2 ],\n            [ \"setosa\", 5.1, 3.3, 1.7, 0.5 ],\n            [ \"setosa\", 4.8, 3.4, 1.9, 0.2 ],\n            [ \"setosa\", 5, 3, 1.6, 0.2 ],\n            [ \"setosa\", 5, 3.4, 1.6, 0.4 ],\n            [ \"setosa\", 5.2, 3.5, 1.5, 0.2 ],\n            [ \"setosa\", 5.2, 3.4, 1.4, 0.2 ],\n            [ \"setosa\", 4.7, 3.2, 1.6, 0.2 ],\n            [ \"setosa\", 4.8, 3.1, 1.6, 0.2 ],\n            [ \"setosa\", 5.4, 3.4, 1.5, 0.4 ],\n            [ \"setosa\", 5.2, 4.1, 1.5, 0.1 ],\n            [ \"setosa\", 5.5, 4.2, 1.4, 0.2 ],\n            [ \"setosa\", 4.9, 3.1, 1.5, 0.2 ],\n            [ \"setosa\", 5, 3.2, 1.2, 0.2 ],\n            [ \"setosa\", 5.5, 3.5, 1.3, 0.2 ],\n            [ \"setosa\", 4.9, 3.6, 1.4, 0.1 ],\n            [ \"setosa\", 4.4, 3, 1.3, 0.2 ],\n            [ \"setosa\", 5.1, 3.4, 1.5, 0.2 ],\n            [ \"setosa\", 5, 3.5, 1.3, 0.3 ],\n            [ \"setosa\", 4.5, 2.3, 1.3, 0.3 ],\n            [ \"setosa\", 4.4, 3.2, 1.3, 0.2 ],\n            [ \"setosa\", 5, 3.5, 1.6, 0.6 ],\n            [ \"setosa\", 5.1, 3.8, 1.9, 0.4 ],\n            [ \"setosa\", 4.8, 3, 1.4, 0.3 ],\n            [ \"setosa\", 5.1, 3.8, 1.6, 0.2 ],\n            [ \"setosa\", 4.6, 3.2, 1.4, 0.2 ],\n            [ \"setosa\", 5.3, 3.7, 1.5, 0.2 ],\n            [ \"setosa\", 5, 3.3, 1.4, 0.2 ]\n        ] ; break;\n    }\n    return data;\n};\n\nexport default Data;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { Button, Slider } from '@material-ui/core';\nimport './Graph.css';\n\n/**\n * @typedef  Box  distances around an object\n *\n * @type  {object}\n * @property  {number}  top     top distance, in pixels\n * @property  {number}  right   right distance, in pixels\n * @property  {number}  bottom  bottom distance, in pixels\n * @property  {number}  left    left distance, in pixels\n */\n\n/**\n * @typedef  D3Scale  d3 scale\n *\n * @type  {(d3.scaleLinear|d3.scaleBand)}  continuous linear or ordinal scale\n */\n \n/**\n * @typedef  Domains  initial and current domains\n *\n * @type  {object}\n * @property  {number}  xMin0  initial X minimum\n * @property  {number}  xMax0  initial X maximum\n * @property  {number}  xMin   current X minimum\n * @property  {number}  xMax   current X maximum\n * @property  {number}  xD     X difference\n * @property  {number}  yMin0  initial Y minimum\n * @property  {number}  yMax0  initial Y maximum\n * @property  {number}  yMin   current Y minimum\n * @property  {number}  yMax   current Y maximum\n * @property  {number}  yD     Y difference\n */\n\n/**\n * @typedef  EventLocation  event location\n *\n * @type  {object}\n * @property  {number}   x        X coordinate, in pixels\n * @property  {number}   y        Y coordinate, in pixels\n * @property  {Array}    xDomain  current X domain\n * @property  {Array}    yDomain  current Y domain\n * @property  {boolean}  isX      true iff on X scrollbar\n * @property  {boolean}  isY      true iff on Y scrollbar\n * @property  {boolean}  isMin    true iff on minimum\n * @property  {boolean}  isMax    true iff on maximum\n */\n\n/**\n * Graph in an SVG element.\n *\n * This component contains code common to the different types of graphs.\n *\n * React functional components don't support inheritance; this is the recommended pattern:\n *    https://reactjs.org/docs/composition-vs-inheritance.html#specialization\n *\n * @param  {Object}  props  properties\n * @param  {Object}  ref    reference to DIV\n * @return component\n */\nconst Graph = React.forwardRef(( props, ref ) => {\n    \n    // Initialization.\n    const buttonSize = 30, sliderOffset = 12;\n    let { width, height, margin, padding, onMouseDown, onMouseUp, onMouseOver, onMouseOut, onZoom, xAggregate, yAggregate, onXAggregate, onYAggregate } = props,\n        top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left;\n    \n    // Return the component.\n    return <div style={{width: width, height: height}} className=\"parent\" ref={ref}>\n        <svg width={width} height={height} onMouseDown={onMouseDown} onMouseMove={onMouseUp} onMouseUp={onMouseUp} onMouseOver={onMouseOver} onMouseOut={onMouseOut} />\n        <Button variant=\"contained\" onClick={()=>onZoom(true )}\n            style={{ position: \"absolute\", padding: 0, minWidth: buttonSize, width: buttonSize, height: buttonSize, top: ( height + 1 - buttonSize ), left: 1,\n            display: \"none\" }}>+</Button>\n        <Button variant=\"contained\" onClick={()=>onZoom(false)}\n            style={{ position: \"absolute\", padding: 0, minWidth: buttonSize, width: buttonSize, height: buttonSize, top: ( height + 1 - buttonSize ), left: 1 + buttonSize,\n            display: \"none\" }}>-</Button>\n        <Slider min={0} max={1} step={0.01}\n            defaultValue={xAggregate} onChange={onXAggregate} className=\"sliderHorz\"\n            style={{ width: width - left - right + 1, top: height - margin.bottom - sliderOffset, left: left + 1, position: \"absolute\", display: \"none\" }} />\n        <Slider min={0} max={1} step={0.01}\n            defaultValue={yAggregate} onChange={onYAggregate} className=\"sliderVert\"  orientation=\"vertical\"\n            style={{ height: height - top - bottom + 1, top: top + 1, left: margin.left - sliderOffset - 1, position: \"absolute\", display: \"none\" }} />\n    </div>;\n});\n\n/**\n * Width of scroll bar, in pixels.\n *\n * @const {number}\n */\nGraph.scrollSize = 15;\n    \n/**\n * Returns whether zooming controls are displayed.\n *\n * @param  {Object}   ref  reference to DIV\n * @return {boolean}  true iff zooming controls are displayed\n */\nGraph.isZooming = ( ref ) => {\n    return ( ref.current.childNodes[ 1 ].style.display === \"inline\" );\n};\n    \n/**\n * Returns whether binning controls are displayed in the X dimension.\n *\n * @param  {Object}   ref  reference to DIV\n * @return {boolean}  true iff binning controls are displayed\n */\nGraph.isXBinning = ( ref ) => {\n    return ( ref.current.childNodes[ 3 ].style.display === \"inline\" );\n};\n    \n/**\n * Returns whether binning controls are displayed in the Y dimension.\n *\n * @param  {Object}   ref  reference to DIV\n * @return {boolean}  true iff binning controls are displayed\n */\nGraph.isYBinning = ( ref ) => {\n    return ( ref.current.childNodes[ 4 ].style.display === \"inline\" );\n};\n \n/**\n * Down event location.\n *\n * @type {EventLocation}\n */\nGraph.downLocation = { x: 0, y: 0, xDomain: [], yDomain: [], isX: false, isY: false, isMin: false, isMax: false };\n\n/**\n * Returns initial and current domains.\n *\n * @param  {Array}    xDomain0    initial X domain\n * @param  {Array}    yDomain0    initial Y domain\n * @param  {Array}    xDomain     current X domain\n * @param  {Array}    yDomain     current Y domain\n * @param  {boolean}  isXOrdinal  true iff X scale is ordinal\n * @param  {boolean}  isYOrdinal  true iff Y scale is ordinal\n * @return {Domains}  initial and current domains\n */\nGraph.getDomains = ( xDomain0, yDomain0, xDomain, yDomain, isXOrdinal, isYOrdinal ) => {\n    let domains = {};\n    if( isXOrdinal ) {\n        domains.xMin0 = 0;\n        domains.xMax0 = xDomain0.length - 1;\n        domains.xMin = xDomain0.indexOf( xDomain[ 0 ]);\n        domains.xMax = xDomain0.indexOf( xDomain[ xDomain.length - 1 ]);\n        domains.xD = 1;\n    } else {\n        domains.xMin0 = xDomain0[ 0 ];\n        domains.xMax0 = xDomain0[ 1 ];\n        domains.xMin = xDomain[ 0 ];\n        domains.xMax = xDomain[ 1 ];\n        domains.xD = 0;\n    }\n    if( isYOrdinal ) {\n        domains.yMin0 = 0;\n        domains.yMax0 = yDomain0.length - 1;\n        domains.yMin = yDomain0.indexOf( yDomain[ 0 ]);\n        domains.yMax = yDomain0.indexOf( yDomain[ yDomain.length - 1 ]);\n        domains.yD = 1;\n    } else {\n        domains.yMin0 = yDomain0[ 0 ];\n        domains.yMax0 = yDomain0[ 1 ];\n        domains.yMin = yDomain[ 0 ];\n        domains.yMax = yDomain[ 1 ];\n        domains.yD = 0;\n    }\n    return domains;\n}\n    \n/**\n * Zooms in one or two dimensions.\n *\n * @param   {boolean}  isIn      true iff zooming in, otherwise zooming out\n * @param   {D3Scale}  xScale    X scale (returned)\n * @param   {D3Scale}  yScale    Y scale (returned)\n * @param   {Array}    xDomain0  Initial X domain\n * @param   {Array}    yDomain0  Initial Y domain\n * @param   {boolean}  isX       true iff zooming in X dimension\n * @param   {boolean}  isY       true iff zooming in Y dimension\n */\nGraph.onZoom2D = ( isIn, xScale, yScale, xDomain0, yDomain0, isX, isY ) => {\n\n    // Initialization.\n    const d = 8,\n        f = ( d - 1 ) / ( 2 * d );\n    let xDomain = xScale.domain(),\n        yDomain = yScale.domain(),\n        { xMin0, xMax0, yMin0, yMax0, xMin, xMax, yMin, yMax, xD, yD } = Graph.getDomains( xDomain0, yDomain0, xDomain, yDomain, !!xScale.bandwidth, !!yScale.bandwidth );\n        \n    // Calculate scales for zoom in...\n    if( isIn ) {\n        const xDif = xMax - xMin, yDif = yMax - yMin;\n        xMin = Math.min( xMin0 + ( xMax0 - xMin0 + xD ) * f, xMin + ( xDif + xD ) / d );\n        xMax = Math.max( xMax0 - ( xMax0 - xMin0 + xD ) * f, xMax - ( xDif + xD ) / d );\n        yMin = Math.min( yMin0 + ( yMax0 - yMin0 + yD ) * f, yMin + ( yDif + yD ) / d );\n        yMax = Math.max( yMax0 - ( yMax0 - yMin0 + yD ) * f, yMax - ( yDif + yD ) / d );\n        if( xScale.bandwidth ) {\n            xMin = Math.ceil( xMin );\n            xMax = Math.floor( xMax );\n            if( xMin > xMax ) {\n                xMin = xDomain0.indexOf( xDomain[ 0 ]);\n                xMax = xMin;\n            }\n        }\n        if( yScale.bandwidth ) {\n            yMin = Math.ceil( yMin );\n            yMax = Math.floor( yMax );\n            if( yMin > yMax ) {\n                yMin = yDomain0.indexOf( yDomain[ 0 ]);\n                yMax = yMin;\n            }\n        }\n    }\n    \n    // ...or for zoom out.\n    else {\n        xMin = Math.max( xMin0, xMin - ( xMax - xMin + xD ) / ( d - 2 ));\n        xMax = Math.min( xMax0, xMax + ( xMax - xMin + xD ) / ( d - 2 ));\n        yMin = Math.max( yMin0, yMin - ( yMax - yMin + yD ) / ( d - 2 ));\n        yMax = Math.min( yMax0, yMax + ( yMax - yMin + yD ) / ( d - 2 ));\n        if( xScale.bandwidth ) {\n            xMin = Math.floor( xMin );\n            xMax = Math.ceil( xMax );\n            if( xMax < xMin ) {\n                xMax = xDomain0.indexOf( xDomain[ xDomain.length - 1 ]);\n                xMin = xMax;\n            }\n        }\n        if( yScale.bandwidth ) {\n            yMin = Math.floor( yMin );\n            yMax = Math.ceil( yMax );\n            if( yMax < yMin ) {\n                yMax = yDomain0.indexOf( yDomain[ yDomain.length - 1 ]);\n                yMin = yMax;\n            }\n        }\n    }\n    \n    // Assign the new scales.\n    if( isX ) {\n        if( xScale.bandwidth ) {\n            xScale.domain( xDomain0.slice( xMin, xMax + 1 ));\n        } else {\n            xScale.domain([ xMin, xMax ]);\n        }\n    }\n    if( isY ) {\n        if( yScale.bandwidth ) {\n            yScale.domain( yDomain0.slice( yMin, yMax + 1 ));\n        } else {\n            yScale.domain([ yMin, yMax ]);\n        }\n    }\n};\n    \n/**\n * Initiates zoom in one dimension.\n *\n * This method modifies Graph.downLocation.\n *\n * @param  {Event}    event     event\n * @param  {number}   width     width, in pixels\n * @param  {number}   height    height, in pixels\n * @param  {Box}      margin    margin\n * @param  {Box}      padding   padding\n * @param  {number}   xScrollSize scroll size in the X dimension, or 0 for default\n * @param  {D3Scale}  xScale    X scale\n * @param  {D3Scale}  yScale    Y scale\n * @param  {Array}    xDomain0  Initial X domain\n * @param  {Array}    yDomain0  Initial Y domain\n */\nGraph.onMouseDown = ( event, width, height, margin, padding, xScrollSize, xScale, yScale, xDomain0, yDomain0 ) => {\n\n    // Initialization.\n    const scrollSize = Graph.scrollSize,\n        endCapSize = 0.8 * scrollSize;\n    let top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left,\n        xDown = event.nativeEvent.offsetX,\n        yDown = event.nativeEvent.offsetY,\n        xDomain = xScale.domain(),\n        yDomain = yScale.domain(),\n        { xMin0, xMax0, yMin0, yMax0, xMin, xMax, yMin, yMax, xD, yD } = Graph.getDomains( xDomain0, yDomain0, xDomain, yDomain, !!xScale.bandwidth, !!yScale.bandwidth );\n        \n    // Prevent text selection.\n    event.preventDefault();\n        \n    // Reset the mousedown coordinates.\n    Graph.downLocation.x = xDown;\n    Graph.downLocation.y = yDown;\n    Graph.downLocation.xDomain = [];\n    Graph.downLocation.yDomain = [];\n    Graph.downLocation.isX = false;\n    Graph.downLocation.isY = false;\n    Graph.downLocation.isMin = false;\n    Graph.downLocation.isMax = false;\n    \n    // Handle event on X scrollbar...\n    if(( left <= xDown ) && ( xDown <= width - right ) && ( height - ( xScrollSize ? xScrollSize : scrollSize ) <= yDown ) && ( yDown <= height )) {\n        let w = width - right - left + 1,\n            x0 = left + w * ( xMin - xMin0      ) / ( xMax0 - xMin0 + xD ),\n            x1 = left + w * ( xMax - xMin0 + xD ) / ( xMax0 - xMin0 + xD );\n        Graph.downLocation.xDomain = xScale.domain();\n        Graph.downLocation.isX = true;\n        if(( x0 <= xDown ) && ( xDown <= x0 + endCapSize )) {\n            Graph.downLocation.isMin = true;\n        } else if(( x1 - endCapSize <= xDown ) && ( xDown <= x1 )) {\n            Graph.downLocation.isMax = true;\n        }\n    }\n    \n    // ...or handle event on Y scrollbar.\n    else if(( 0 <= xDown ) && ( xDown <= scrollSize ) && ( top <= yDown ) && ( yDown <= height - bottom )) {\n        let h = height - bottom - top + 1,\n            y0 = top + h * ( 1 - ( yMin - yMin0      ) / ( yMax0 - yMin0 + yD )),\n            y1 = top + h * ( 1 - ( yMax - yMin0 + yD ) / ( yMax0 - yMin0 + yD ));\n        Graph.downLocation.yDomain = yScale.domain();\n        Graph.downLocation.isY = true;\n        if(( y1 <= yDown ) && ( yDown <= y1 + endCapSize )) {\n            Graph.downLocation.isMax = true;\n        } else if(( y0 - endCapSize <= yDown ) && ( yDown <= y0 )) {\n            Graph.downLocation.isMin = true;\n        }\n    }\n};\n\n/**\n * Completes zoom in one dimension.\n *\n * This method modifies Graph.downLocation.\n *\n * @param  {Object}   ref       reference to DIV\n * @param  {Event}    event     event\n * @param  {number}   width     width, in pixels\n * @param  {number}   height    height, in pixels\n * @param  {Box}      margin    margin\n * @param  {Box}      padding   padding\n * @param  {D3Scale}  xScale    X scale (returned)\n * @param  {D3Scale}  yScale    Y scale (returned)\n * @param  {Array}    xDomain0  Initial X domain\n * @param  {Array}    yDomain0  Initial Y domain\n */\nGraph.onMouseUp = ( ref, event, width, height, margin, padding, xScale, yScale, xDomain0, yDomain0 ) => {\n\n    // Initialization.\n    const d = 8;\n    let top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left,\n        xUp = event.nativeEvent.offsetX,\n        yUp = event.nativeEvent.offsetY,\n        xDomain = Graph.downLocation.xDomain,\n        yDomain = Graph.downLocation.yDomain,\n        { xMin0, xMax0, yMin0, yMax0, xMin, xMax, yMin, yMax, xD, yD } = Graph.getDomains( xDomain0, yDomain0, xDomain, yDomain, !!xScale.bandwidth, !!yScale.bandwidth );\n    \n    // Handle event on X scrollbar...\n    if( Graph.downLocation.isX ) {\n    \n        // Calculate the difference.\n        const f = ( xMax0 - xMin0 + xD ) / d;\n        let w = width - right - left + 1,\n            dif = ( xMax0 - xMin0 + xD ) * ( xUp - Graph.downLocation.x ) / w;\n        if( xScale.bandwidth ) {\n            dif = Math.round( dif );\n        }\n        \n        // Handle drag on minimum handle...\n        if( Graph.downLocation.isMin ) {\n            dif = Math.max( dif, xMin0 - xMin );\n            if( dif <= xMax - xMin + xD - f ) {\n                if( xScale.bandwidth ) {\n                    xScale.domain( xDomain0.slice( xMin + dif, xMax + xD ));\n                } else {\n                    xScale.domain([ xMin + dif, xMax ]);\n                }\n            }\n        }\n        \n        // ...or handle drag on maximum handle...\n        else if( Graph.downLocation.isMax ) {\n            dif = Math.min( dif, xMax0 - xMax );\n            if( dif >= f - ( xMax - xMin + xD )) {\n                if( xScale.bandwidth ) {\n                    xScale.domain( xDomain0.slice( xMin, xMax + dif + xD ));\n                } else {\n                    xScale.domain([ xMin, xMax + dif ]);\n                }\n            }\n        }\n        \n        // ...or handle drag on thumb or click on track.\n        else {\n        \n            // Adjust for click on track.\n            if( dif === 0 ) {\n                let x0 = left + w * ( xMin - xMin0      ) / ( xMax0 - xMin0 + xD ),\n                    x1 = left + w * ( xMax - xMin0 + xD ) / ( xMax0 - xMin0 + xD );\n                if( xUp < x0 ) {\n                    dif = ( xMax0 - xMin0 + xD ) * ( xUp - x0 ) / w - ( xMax - xMin + xD ) / 2;\n                } else if( x1 < xUp ) {\n                    dif = ( xMax0 - xMin0 + xD ) * ( xUp - x1 ) / w + ( xMax - xMin + xD ) / 2;\n                }\n            }\n            \n            // Handle drag or click.\n            dif = Math.max( dif, xMin0 - xMin );\n            dif = Math.min( dif, xMax0 - xMax );\n            if( xScale.bandwidth ) {\n                xScale.domain( xDomain0.slice( xMin + dif, xMax + dif + xD ));\n            } else {\n                xScale.domain([ xMin + dif, xMax + dif ]);\n            }\n        }\n    }\n    \n    // ...or handle event on Y scrollbar.\n    else if( Graph.downLocation.isY ) {\n    \n        // Calculate the difference.\n        const f = ( yMax0 - yMin0 + yD ) / d;\n        let h = height - bottom - top + 1,\n            dif = ( yMax0 - yMin0 + yD ) * ( Graph.downLocation.y - yUp ) / h;\n        if( yScale.bandwidth ) {\n            dif = Math.round( dif );\n        }\n            \n        // Handle drag on minimum handle...\n        if( Graph.downLocation.isMin ) {\n            dif = Math.max( dif, yMin0 - yMin );\n            if( dif <= yMax - yMin + yD - f ) {\n                if( yScale.bandwidth ) {\n                    yScale.domain( yDomain0.slice( yMin + dif, yMax + yD ));\n                } else {\n                    yScale.domain([ yMin + dif, yMax ]);\n                }\n            }\n        }\n        \n        // ...or handle drag on maximum handle...\n        else if( Graph.downLocation.isMax ) {\n            dif = Math.min( dif, yMax0 - yMax );\n            if( dif >= f - ( yMax - yMin + yD )) {\n                if( yScale.bandwidth ) {\n                    yScale.domain( yDomain0.slice( yMin, yMax + dif + yD ));\n                } else {\n                    yScale.domain([ yMin, yMax + dif ]);\n                }\n            }\n        }\n        \n        // ...or handle drag on thumb or click on track.\n        else {\n        \n            // Adjust for click on track.\n            if( dif === 0 ) {\n                let y0 = top + h * ( 1 - ( yMin - yMin0      ) / ( yMax0 - yMin0 + yD )),\n                    y1 = top + h * ( 1 - ( yMax - yMin0 + yD ) / ( yMax0 - yMin0 + yD ));\n                if( yUp < y0 ) {\n                    dif = ( yMax0 - yMin0 + yD ) * ( y0 - yUp ) / h - ( yMax - yMin + yD ) / 2;\n                } else if( y1 < yUp ) {\n                    dif = ( yMax0 - yMin0 + yD ) * ( y1 - yUp ) / h + ( yMax - yMin + yD ) / 2;\n                }\n            }\n            \n            // Handle drag or click.\n            dif = Math.max( dif, yMin0 - yMin );\n            dif = Math.min( dif, yMax0 - yMax );\n            if( yScale.bandwidth ) {\n                yScale.domain( yDomain0.slice( yMin + dif, yMax + dif + yD ));\n            } else {\n                yScale.domain([ yMin + dif, yMax + dif ]);\n            }\n        }\n    }\n        \n    // Reset the mousedown coordinates.\n    if(( Graph.downLocation.isX || Graph.downLocation.isY ) && ( event.type === \"mouseup\" )) {\n        Graph.downLocation.isX = false;\n        Graph.downLocation.isY = false;\n        Graph.downLocation.isMin = false;\n        Graph.downLocation.isMax = false;\n    }\n};\n    \n/**\n * Draws the axes.\n *\n * @param  {Object}   ref         reference to DIV\n * @param  {number}   width       width, in pixels\n * @param  {number}   height      height, in pixels\n * @param  {Box}      margin      margin\n * @param  {Box}      padding     padding\n * @param  {number}   xScrollSize scroll size in the X dimension, or 0 for default\n * @param  {D3Scale}  xScale      X scale\n * @param  {D3Scale}  yScale      Y scale\n * @param  {Array}    xDomain0    Initial X domain\n * @param  {Array}    yDomain0    Initial Y domain\n * @param  {string}   xLabel      X axis label\n * @param  {string}   yLabel      Y axis label\n */\nGraph.drawAxes = ( ref, width, height, margin, padding, xScrollSize, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel ) => {\n    \n    // Initialization.\n    const svg = d3.select( ref.current.childNodes[ 0 ]),\n        scrollSize = Graph.scrollSize,\n        colorLight = \"#ebeeef\";\n        \n    // Clear the margins.\n    svg.append( \"rect\" )\n        .attr( \"x\", 0 )\n        .attr( \"y\", 0 )\n        .attr( \"width\", width )\n        .attr( \"height\", padding.top )\n        .style( \"fill\", colorLight );\n    svg.append( \"rect\" )\n        .attr( \"x\", width - padding.right )\n        .attr( \"y\", 0 )\n        .attr( \"width\", padding.right )\n        .attr( \"height\", height + xScrollSize )\n        .style( \"fill\", colorLight );\n    svg.append( \"rect\" )\n        .attr( \"x\", 0 )\n        .attr( \"y\", height - margin.bottom )\n        .attr( \"width\", width )\n        .attr( \"height\", margin.bottom )\n        .style( \"fill\", colorLight );\n    svg.append( \"rect\" )\n        .attr( \"x\", 0 )\n        .attr( \"y\", 0 )\n        .attr( \"width\", margin.left )\n        .attr( \"height\", height + xScrollSize )\n        .style( \"fill\", colorLight );\n    \n    // Draw the X axis.\n    svg.append( \"g\" )\n        .attr( \"class\", ( margin.bottom > 50 ) ? \"axisRotated\" : \"axis\" )\n        .attr( \"transform\", \"translate( 0, \" + ( height - margin.bottom ) + \" )\" )\n        .call( d3.axisBottom( xScale ).ticks( 3 ).tickFormat( t => ( \"\" + t )));\n    svg.append( \"text\" )\n        .attr( \"transform\", \"translate( \" + ( width / 2 ) + \" ,\" + ( height - 1.5 * scrollSize ) + \")\" )\n        .style( \"text-anchor\", \"middle\" )\n        .text( xLabel );\n        \n    // Draw the Y axis.\n    svg.append( \"g\" )\n        .attr( \"class\", \"axis\" )\n        .attr( \"transform\", \"translate( \" + margin.left + \", 0 )\" )\n        .call( d3.axisLeft( yScale ).ticks( 3 ).tickFormat( t => ( \"\" + t )));\n    svg.append( \"text\" )\n        .attr( \"x\", margin.left )\n        .attr( \"y\", margin.top + padding.top * 0.7 )\n        .style( \"text-anchor\", \"middle\" )\n        .text( yLabel );\n};\n    \n/**\n * Draws the controls.\n *\n * @param  {Object}   ref         reference to DIV\n * @param  {number}   width       width, in pixels\n * @param  {number}   height      height, in pixels\n * @param  {Box}      margin      margin\n * @param  {Box}      padding     padding\n * @param  {number}   xScrollSize scroll size in the X dimension, or 0 for default\n * @param  {boolean}  isXZooming  true iff this graph can be zoomed in the X dimension\n * @param  {boolean}  isYZooming  true iff this graph can be zoomed in the Y dimension\n * @param  {boolean}  isXBinning  true iff this graph can be binned in the X dimension\n * @param  {boolean}  isYBinning  true iff this graph can be binned in the Y dimension\n * @param  {D3Scale}  xScale      X scale\n * @param  {D3Scale}  yScale      Y scale\n * @param  {Array}    xDomain0    Initial X domain\n * @param  {Array}    yDomain0    Initial Y domain\n * @param  {string}   xLabel      X axis label\n * @param  {string}   yLabel      Y axis label\n */\nGraph.drawControls = ( ref, width, height, margin, padding, xScrollSize, isXZooming, isYZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel ) => {\n    \n    // Initialization.\n    const svg = d3.select( ref.current.childNodes[ 0 ]),\n        scrollSize = Graph.scrollSize,\n        halfSize = scrollSize / 2,\n        colorLight = \"#ebeeef\",\n        colorLine = \"#cbd2d7\";\n    let xDomain = xScale.domain(),\n        yDomain = yScale.domain(),\n        { xMin0, xMax0, yMin0, yMax0, xMin, xMax, yMin, yMax, xD, yD } = Graph.getDomains( xDomain0, yDomain0, xDomain, yDomain, !!xScale.bandwidth, !!yScale.bandwidth ),\n        x = margin.left + padding.left,\n        w = width - margin.right - padding.right - x + 1,\n        y = margin.top + padding.top,\n        h = height - margin.bottom - padding.bottom - y + 1;\n        \n    // Draw the X scroll bar.\n    let x1 = x + w * ( xMin - xMin0      ) / ( xMax0 - xMin0 + xD ),\n        x2 = x + w * ( xMax - xMin0 + xD ) / ( xMax0 - xMin0 + xD );\n    if( xScrollSize ) {\n        svg.append( \"rect\" )\n            .attr( \"x\", x1 )\n            .attr( \"y\", height - xScrollSize )\n            .attr( \"width\", x2 - x1 )\n            .attr( \"height\", xScrollSize )\n            .attr( \"opacity\",\"0.5\" )\n            .style( \"fill\", colorLine );\n     }\n    \n    // Draw the X zoombar...\n    const d = halfSize / 2,\n        k = scrollSize / 4;\n    if( isXZooming ) {\n        \n        // Draw a traditional scrollbar...\n        if( !xScrollSize ) {\n            svg.append( \"rect\" )\n                .attr( \"x\", x )\n                .attr( \"y\", height - scrollSize )\n                .attr( \"width\", w )\n                .attr( \"height\", scrollSize )\n                .style( \"fill\", \"#ffffff\" );\n            svg.append( \"line\" )\n                .attr( \"x1\", x1 + halfSize )\n                .attr( \"y1\", height - halfSize )\n                .attr( \"x2\", x2 - halfSize )\n                .attr( \"y2\", height - halfSize )\n                .style( \"stroke-width\", scrollSize )\n                .style( \"stroke\", colorLine )\n                .style( \"stroke-linecap\", \"round\" );\n            svg.append( \"line\" )\n                .attr( \"x1\", x1 + halfSize + 1 )\n                .attr( \"y1\", height - halfSize )\n                .attr( \"x2\", x2 - halfSize - 1 )\n                .attr( \"y2\", height - halfSize )\n                .style( \"stroke-width\", scrollSize )\n                .style( \"stroke\", \"#ffffff\" )\n                .style( \"stroke-linecap\", \"butt\" );\n            svg.append( \"line\" )\n                .attr( \"x1\", x1 + halfSize + 2 )\n                .attr( \"y1\", height - halfSize )\n                .attr( \"x2\", x2 - halfSize - 2 )\n                .attr( \"y2\", height - halfSize )\n                .style( \"stroke-width\", scrollSize )\n                .style( \"stroke\", colorLine )\n                .style( \"stroke-linecap\", \"butt\" );\n        }\n        \n        // ...or an overview scrollbar.\n        else {\n            svg.append( \"line\" )\n                .attr( \"x1\", x1 + halfSize + 1 )\n                .attr( \"y1\", height - xScrollSize )\n                .attr( \"x2\", x1 + halfSize + 1 )\n                .attr( \"y2\", height )\n                .attr( \"opacity\",\"0.5\" )\n                .style( \"stroke-width\", 1 )\n                .style( \"stroke\", \"#ffffff\" )\n                .style( \"stroke-linecap\", \"butt\" );\n            svg.append( \"line\" )\n                .attr( \"x1\", x2 - halfSize - 1 )\n                .attr( \"y1\", height - xScrollSize )\n                .attr( \"x2\", x2 - halfSize - 1 )\n                .attr( \"y2\", height )\n                .attr( \"opacity\",\"0.5\" )\n                .style( \"stroke-width\", 1 )\n                .style( \"stroke\", \"#ffffff\" )\n                .style( \"stroke-linecap\", \"butt\" );\n        }\n            \n        // Draw the X drag handles.\n        let y1 = xScrollSize ? height - xScrollSize / 2 + k : height - scrollSize + k;\n        let y2 = xScrollSize ? height - xScrollSize / 2 - k : height - k;\n        svg.append( \"line\" )\n            .attr( \"x1\", x1 + d )\n            .attr( \"y1\", y1 )\n            .attr( \"x2\", x1 + d )\n            .attr( \"y2\", y2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", x1 + d + 2 )\n            .attr( \"y1\", y1 )\n            .attr( \"x2\", x1 + d + 2 )\n            .attr( \"y2\", y2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", x2 - d )\n            .attr( \"y1\", y1 )\n            .attr( \"x2\", x2 - d )\n            .attr( \"y2\", y2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", x2 - d - 2 )\n            .attr( \"y1\", y1 )\n            .attr( \"x2\", x2 - d - 2 )\n            .attr( \"y2\", y2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n    }\n    \n    // ...or hide the X zoombar.\n    else if( !xScrollSize ) {\n        svg.append( \"rect\" )\n            .attr( \"x\", x )\n            .attr( \"y\", height - scrollSize )\n            .attr( \"width\", w )\n            .attr( \"height\", scrollSize )\n            .style( \"fill\", colorLight );\n    }\n    \n    // Draw the Y zoombar...\n    if( isYZooming ) {\n        \n        // Draw the Y scrollbar.\n        let y1 = y + h * ( 1 - ( yMin - yMin0      ) / ( yMax0 - yMin0 + yD )),\n            y2 = y + h * ( 1 - ( yMax - yMin0 + yD ) / ( yMax0 - yMin0 + yD ));\n        svg.append( \"rect\" )\n            .attr( \"x\", 0 )\n            .attr( \"y\", y )\n            .attr( \"width\", scrollSize )\n            .attr( \"height\", h )\n            .style( \"fill\", \"#ffffff\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", halfSize )\n            .attr( \"y1\", y2 + halfSize )\n            .attr( \"x2\", halfSize )\n            .attr( \"y2\", y1 - halfSize )\n            .style( \"stroke-width\", scrollSize )\n            .style( \"stroke\", colorLine )\n            .style( \"stroke-linecap\", \"round\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", halfSize )\n            .attr( \"y1\", y2 + halfSize + 1 )\n            .attr( \"x2\", halfSize )\n            .attr( \"y2\", y1 - halfSize - 1 )\n            .style( \"stroke-width\", scrollSize )\n            .style( \"stroke\", \"#ffffff\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", halfSize )\n            .attr( \"y1\", y2 + halfSize + 2 )\n            .attr( \"x2\", halfSize )\n            .attr( \"y2\", y1 - halfSize - 2 )\n            .style( \"stroke-width\", scrollSize )\n            .style( \"stroke\", colorLine )\n            .style( \"stroke-linecap\", \"butt\" );\n            \n        // Draw the Y drag handles.\n        svg.append( \"line\" )\n            .attr( \"x1\", k )\n            .attr( \"y1\", y1 - d )\n            .attr( \"x2\", scrollSize - k )\n            .attr( \"y2\", y1 - d )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", k )\n            .attr( \"y1\", y1 - d - 2 )\n            .attr( \"x2\", scrollSize - k )\n            .attr( \"y2\", y1 - d - 2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", k )\n            .attr( \"y1\", y2 + d )\n            .attr( \"x2\", scrollSize - k )\n            .attr( \"y2\", y2 + d )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n        svg.append( \"line\" )\n            .attr( \"x1\", k )\n            .attr( \"y1\", y2 + d + 2 )\n            .attr( \"x2\", scrollSize - k )\n            .attr( \"y2\", y2 + d + 2 )\n            .style( \"stroke-width\", 1 )\n            .style( \"stroke\", \"#000000\" )\n            .style( \"stroke-linecap\", \"butt\" );\n    }\n    \n    // ...or hide the Y zoombar.\n    else {\n        svg.append( \"rect\" )\n            .attr( \"x\", 0 )\n            .attr( \"y\", y )\n            .attr( \"width\", scrollSize )\n            .attr( \"height\", h )\n            .style( \"fill\", colorLight );\n    }\n\n    // Show or hide the buttons and sliders.\n    if(( isXZooming || isYZooming ) !== Graph.isZooming( ref )) {\n        for( let i = 1; ( i < 3 ); i++ ) {\n            ref.current.childNodes[ i ].style.display = (( isXZooming || isYZooming ) ? \"inline\" : \"none\" );\n        }\n    }\n    if( isXBinning !== Graph.isXBinning( ref )) {\n        ref.current.childNodes[ 3 ].style.display = ( isXBinning ? \"inline\" : \"none\" );\n    }\n    if( isYBinning !== Graph.isYBinning( ref )) {\n        ref.current.childNodes[ 4 ].style.display = ( isYBinning ? \"inline\" : \"none\" );\n    }\n};\n\nexport default Graph;\n","import React, { useEffect, useRef, useState }  from 'react';\nimport * as d3 from 'd3';\nimport Data from './Data';\nimport Graph from './Graph';\nimport './Graph.css';\n\n/**\n * Histogram in an SVG element.\n *\n * The X domain is stored as a state.  The Y domain is calculated from the X domain.\n *\n * @param  {Object}  props  properties\n * @return component\n */\nconst Histogram = ( props ) => {\n    \n    // Initialization.\n    const width = 650,\n        height = 400,\n        padding = { top: 20, right: 20, bottom: 0, left: 20 },\n        margin = { top: 0, right: 10, bottom: 50, left: 50 },\n        top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left;\n    let ref = useRef(),\n        { dataSet } = props,\n        columnIndex = 2,\n        xLabel = Data.getColumnNames( dataSet )[ columnIndex ],\n        yLabel = \"Frequency\",\n        data = Data.getValues( dataSet ),\n        xDomain0 = [ d3.min( data, d => d[ columnIndex ]), d3.max( data, d => d[ columnIndex ])],\n        yDomain0,\n        xScale,\n        yScale,\n        histogram,\n        bins;\n        \n    // Get the X scale.\n    const [ xDomain, setXDomain ] = useState( xDomain0 );\n    xScale = d3.scaleLinear().domain( xDomain ).range([ left, width - right ]);\n    \n    // Assign the X aggregate factor.\n    const [ xAggregate, setXAggregate ] = useState( 0.5 );\n    let onXAggregate = ( event, value ) => {\n        setXDomain( xScale.domain());\n        setXAggregate( value );\n    };\n\n    // Calculate the histogram bins.\n    histogram = d3.histogram()\n        .value( d => d[ columnIndex ])\n        .domain( xDomain0 )\n        .thresholds( Math.round( Math.exp( 5 * ( 1 - xAggregate ))));\n    bins = histogram( data );\n\n    // Get the Y scale.\n    yDomain0 = [ 0, 1.05 * d3.max( bins, d => d.length )];      // a 5% margin\n    yScale = d3.scaleLinear()\n        .range([ height - bottom, top ])\n        .domain( yDomain0 );\n        \n    // Zooms in two dimensions.\n    let onZoom2D = ( isIn ) => {\n        Graph.onZoom2D( isIn, xScale, yScale, xDomain0, yDomain0, false, true );\n        Histogram.draw( ref, width, height, margin, padding, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins );\n    };\n    \n    // Zooms in one dimension.\n    let onMouseDown = ( event ) => {\n        Graph.onMouseDown( event, width, height, margin, padding, 0, xScale, yScale, xDomain0, yDomain0 );\n    },\n    onMouseUp = ( event ) => {\n        if( Graph.downLocation.isX || Graph.downLocation.isY ) {\n            Graph.onMouseUp( ref, event, width, height, margin, padding, xScale, yScale, xDomain0, yDomain0 );\n            Histogram.draw( ref, width, height, margin, padding, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins );\n        }\n    };\n    \n    // Show or hide the controls.\n    let onMouseOver = ( event ) => {\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    let onMouseOut = ( event ) => {\n        let xUp = event.nativeEvent.offsetX,\n            yUp = event.nativeEvent.offsetY,\n            isBinning = (( 0 <= xUp ) && ( xUp < width ) && ( 0 <= yUp ) && ( yUp < height ));\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, isBinning, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    \n    // Set hook to draw on mounting or any state change.\n    useEffect(() => {\n        Histogram.draw( ref, width, height, margin, padding, false, Graph.isXBinning( ref ), Graph.isYBinning( ref ), xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins );\n    });\n    \n    // Return the component.\n    return <Graph width={width} height={height} margin={margin} padding={padding}\n        onZoom={onZoom2D} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseOver={onMouseOver} onMouseOut={onMouseOut} xAggregate={0.5} onXAggregate={onXAggregate} ref={ref} />\n};\n\n/**\n * Draws the histogram.\n *\n * @param  {Object}   ref          reference to DIV\n * @param  {number}   width        width, in pixels\n * @param  {number}   height       height, in pixels\n * @param  {Box}      margin       margin\n * @param  {Box}      padding      padding\n * @param  {boolean}  isZooming    true if drawing zoom controls\n * @param  {boolean}  isXBinning   true iff drawing bin controls in X dimension\n * @param  {boolean}  isYBinning   true iff drawing bin controls in Y dimension\n * @param  {D3Scale}  xScale       X scale\n * @param  {D3Scale}  yScale       Y scale\n * @param  {Array}    xDomain0     Initial X domain\n * @param  {Array}    yDomain0     Initial Y domain\n * @param  {string}   xLabel       X axis label\n * @param  {string}   yLabel       Y axis label\n * @param  {Array}    bins         bins\n */\nHistogram.draw = ( ref, width, height, margin, padding, isZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins ) => {\n    \n    // Initialization.\n    const svg = d3.select( ref.current.childNodes[ 0 ]);\n    svg.selectAll( \"*\" ).remove();\n\n    // Draw the bars.\n    svg.selectAll( \"rect\" )\n        .data( bins )\n        .enter()\n        .append( \"rect\" )\n        .attr( \"x\", 1 )\n        .attr( \"transform\", bin => ( \"translate( \" + xScale( bin.x0 ) + \",\" + yScale( bin.length ) + \" )\" ))\n        .attr( \"width\", bin => Math.max( 0, (( bin.x1 === bin.x0 ) ? 0 : ( xScale( bin.x1 ) - xScale( bin.x0 ) - 1 ))))\n        .attr( \"height\", bin => Math.max( 0, ( height - margin.bottom - padding.bottom - yScale( bin.length ))))\n        .style( \"fill\", \"#99bbdd\" );\n    \n    // Draw the axes and the controls.\n    Graph.drawAxes(     ref, width, height, margin, padding, 0, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    Graph.drawControls( ref, width, height, margin, padding, 0, isZooming, isZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n};\n\nexport default Histogram;\n","import React, { useEffect, useRef, useState }  from 'react';\nimport * as d3 from 'd3';\nimport Data from './Data';\nimport Graph from './Graph';\nimport './Graph.css';\n\n/**\n * Bar chart in an SVG element.\n *\n * The X domain is stored as a state.  The Y domain is calculated from the X domain.\n *\n * The X aggregate factor, which determines how the bars are aggregated, is also stored as a state.\n *\n * @param  {Object}  props  properties\n * @return component\n */\nconst BarChart = ( props ) => {\n    \n    // Initialization.\n    const width = 650,\n        height = 400,\n        padding = { top: 20, right: 20, bottom: 0, left: 20 },\n        margin = { top: 0, right: 0, bottom: 120, left: 60 },\n        top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left;\n    let ref = useRef(),\n        { dataSet } = props,\n        xLabel = Data.getColumnNames( dataSet )[ 0 ],\n        yLabel = Data.getColumnNames( dataSet )[ 1 ],\n        data = Data.getValues( dataSet ),\n        xDomain0,\n        yDomain0,\n        xScale,\n        yScale,\n        bars;\n        \n    // Get the X scale.\n    const [ xDomain, setXDomain ] = useState([]);\n    xScale = d3.scaleBand().domain( xDomain ).range([ left, width - right ]).padding( 0.2 );\n    \n    // Assign the X aggregate factor.\n    const [ xAggregate, setXAggregate ] = useState( 0 );\n    let onXAggregate = ( event, value ) => {\n        setXDomain( xScale.domain());\n        setXAggregate( value );\n    };\n\n    // Calculate the bars.\n    bars = Array.from( d3.rollup( data, v => d3.sum( v, d => d[ 1 ]), d => d[ 0 ]));\n    bars.sort(( a, b ) => ( b[ 1 ] - a[ 1 ]));\n    \n    // Combine bars if requested.\n    let n = Math.round( xAggregate * bars.length );\n    if( 0 < n ) {\n        let total = 0;\n        for( let i = 0; ( i < n ); i++ ) {\n            total += bars[ bars.length - i - 1 ][ 1 ];\n        }\n        bars.splice( bars.length - n, n );\n        bars.push([ \"Other\", total ]);\n    }\n    \n    // Set the X domain.\n    xDomain0 = bars.map( x => x[ 0 ]);\n    xScale.domain( xDomain0 );\n\n    // Get the Y scale.\n    yDomain0 = [ 0, ( 1 + BarChart.yMargin ) * d3.max( bars, d => d[ 1 ])];\n    yScale = d3.scaleLinear()\n        .domain( yDomain0 )\n        .range([ height - bottom, top ]);\n        \n    // Zoom in two dimensions.\n    let onZoom2D = ( isIn ) => {\n        Graph.onZoom2D( isIn, xScale, yScale, xDomain0, yDomain0, false, true );\n        BarChart.draw( ref, width, height, margin, padding, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bars );\n    };\n    \n    // Zoom in one dimension.\n    let onMouseDown = ( event ) => {\n        Graph.onMouseDown( event, width, height, margin, padding, 0, xScale, yScale, xDomain0, yDomain0 );\n    },\n    onMouseUp = ( event ) => {\n        if( Graph.downLocation.isX || Graph.downLocation.isY ) {\n            Graph.onMouseUp( ref, event, width, height, margin, padding, xScale, yScale, xDomain0, yDomain0 );\n            BarChart.draw( ref, width, height, margin, padding, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bars );\n        }\n    };\n    \n    // Show or hide the controls.\n    let onMouseOver = ( event ) => {\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, true, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    let onMouseOut = ( event ) => {\n        let xUp = event.nativeEvent.offsetX,\n            yUp = event.nativeEvent.offsetY,\n            isBinning = (( 0 <= xUp ) && ( xUp < width ) && ( 0 <= yUp ) && ( yUp < height ));\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, isBinning, false, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    \n    // Set hook to draw on mounting or any state change.\n    useEffect(() => {\n        BarChart.draw( ref, width, height, margin, padding, false, Graph.isXBinning( ref ), Graph.isYBinning( ref ), xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bars );\n    });\n    \n    // Return the component.\n    return <Graph width={width} height={height} margin={margin} padding={padding}\n        onZoom={onZoom2D} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseOver={onMouseOver} onMouseOut={onMouseOut}  onXAggregate={onXAggregate} ref={ref} />\n};\n\n/**\n * Y axis margin, as a percentage between 0 and 1.\n *\n * @const {number}\n */\nBarChart.yMargin = 0.05;\n\n/**\n * Length of \"Other\" bar, as a percentage of maximum bar length, >1.\n *\n * @const {number}\n */\nBarChart.otherPercent = 1.3;\n\n/**\n * Draws the bar chart.\n *\n * @param  {Object}   ref          reference to DIV\n * @param  {number}   width        width, in pixels\n * @param  {number}   height       height, in pixels\n * @param  {Box}      margin       margin\n * @param  {Box}      padding      padding\n * @param  {boolean}  isZooming    true iff drawing zoom controls\n * @param  {boolean}  isXBinning   true iff drawing bin controls in X dimension\n * @param  {boolean}  isYBinning   true iff drawing bin controls in Y dimension\n * @param  {D3Scale}  xScale       X scale\n * @param  {D3Scale}  yScale       Y scale\n * @param  {Array}    xDomain0     Initial X domain\n * @param  {Array}    yDomain0     Initial Y domain\n * @param  {string}   xLabel       X axis label\n * @param  {string}   yLabel       Y axis label\n * @param  {Array}    bars         bars\n */\nBarChart.draw = ( ref, width, height, margin, padding, isZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bars ) => {\n    \n    // Initialization.\n    const top  = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left,\n        svg = d3.select( ref.current.childNodes[ 0 ]);\n    svg.selectAll( \"*\" ).remove();\n\n    // If the \"Other\" bar is long, shorten it.\n    let yScale1 = yScale,\n        otherLength;\n    const n = bars.length,\n        maxLength = d3.max( bars.slice( 0, n - 1 ), d => d[ 1 ]),\n        isOtherLong = ( n > 1 ) && ( bars[ n - 1 ][ 0 ] === \"Other\" ) && ( bars[ n - 1 ][ 1 ] > BarChart.otherPercent * maxLength );\n    if( isOtherLong ) {\n        \n        // Save the \"Other\" bar length.\n        otherLength = bars[ n - 1 ][ 1 ];\n        \n        // Shorten the \"Other\" bar.\n        bars[ n - 1 ][ 1 ] = BarChart.otherPercent * maxLength;\n        yScale1 = d3.scaleLinear()\n            .domain([ 0, ( 1 + BarChart.yMargin ) * bars[ n - 1 ][ 1 ]])\n            .range([ height - bottom, top ]);\n    }\n    \n    // Draw the bars.\n    svg.selectAll( \"rect\" )\n        .data( bars )\n        .enter()\n        .append( \"rect\" )\n        .attr( \"x\", ( d ) => xScale( d[ 0 ]))\n        .attr( \"y\", ( d ) => yScale1( d[ 1 ]))\n        .attr( \"width\", xScale.bandwidth())\n        .attr( \"height\", ( d ) => (( xScale.domain().indexOf( d[ 0 ]) >= 0 ) ? Math.max( 0, height - yScale1( d[ 1 ])) : 0 ))\n        .style( \"fill\", \"#99bbdd\" );\n    \n    // Draw the axes and the controls.\n    Graph.drawAxes(     ref, width, height, margin, padding, 0, xScale, yScale1, xDomain0, yDomain0, xLabel, yLabel );\n    if( isOtherLong ) {\n        \n        // Clear the margin.\n        const d = 10,\n            y = yScale1( maxLength ) - 2 * d,\n            colorLight = \"#ebeeef\";\n        svg.append( \"rect\" )\n            .attr( \"x\", 0 )\n            .attr( \"y\", top )\n            .attr( \"width\", margin.left )\n            .attr( \"height\", y - top )\n            .style( \"fill\", colorLight );\n            \n        // Draw the second Y axis.\n        let yScale2 = d3.scaleLinear()\n            .domain([( 1 + BarChart.yMargin ) * maxLength, ( 1 + BarChart.yMargin ) * otherLength ])\n            .range([ y, top ]);\n        svg.append( \"g\" )\n            .attr( \"class\", \"axis\" )\n            .attr( \"transform\", \"translate( \" + margin.left + \", 0 )\" )\n            .call( d3.axisLeft( yScale2 ).ticks( 2 ).tickFormat( t => ( \"\" + t )));\n        \n        // Draw the breaks.\n        let breakWidth = 30,\n            x = margin.left - breakWidth / 2;\n        svg.append( \"rect\" )\n            .attr( \"x\", x )\n            .attr( \"y\", y )\n            .attr( \"width\", breakWidth )\n            .attr( \"height\", d )\n            .style( \"fill\", \"#939ba1\" );\n        svg.append( \"rect\" )\n            .attr( \"x\", x )\n            .attr( \"y\", y + 1 )\n            .attr( \"width\", breakWidth )\n            .attr( \"height\", d - 2 )\n            .style( \"fill\", \"#ffffff\" );\n        breakWidth = xScale.step();\n        const barPadding = ( width - left - right - n * breakWidth );\n        x = width - right - breakWidth - barPadding / 2;\n        svg.append( \"rect\" )\n            .attr( \"x\", x )\n            .attr( \"y\", y )\n            .attr( \"width\", breakWidth )\n            .attr( \"height\", d )\n            .style( \"fill\", \"#939ba1\" );\n        svg.append( \"rect\" )\n            .attr( \"x\", x )\n            .attr( \"y\", y + 1 )\n            .attr( \"width\", breakWidth )\n            .attr( \"height\", d - 2 )\n            .style( \"fill\", \"#ffffff\" );\n    \n        // Restore the \"Other\" bar length.\n        bars[ n - 1 ][ 1 ] = otherLength;\n    }\n    \n    // Draw the controls.\n    Graph.drawControls( ref, width, height, margin, padding, 0, isZooming, isZooming, isXBinning, isYBinning, xScale, yScale1, xDomain0, yDomain0, xLabel, yLabel );\n};\n\nexport default BarChart;\n","import React, { useEffect, useRef, useState }  from 'react';\nimport * as d3 from 'd3';\nimport Data from './Data';\nimport Graph from './Graph';\nimport './Graph.css';\n\n/**\n * Heat map in an SVG element.\n *\n * The X and Y domains are both stored as states.\n *\n * The X and Y aggregate factors, which determine how the tiles are aggregated, are also stored as states.\n *\n * @param  {Object}  props  properties\n * @return component\n */\nconst Heatmap = ( props ) => {\n    \n    // Initialization.\n    const width = 400,\n        height = 650,\n        padding = { top: 20, right: 20, bottom: 10, left: 10 },\n        margin = { top: 0, right: 0, bottom: 50, left: 80 },\n        top    = margin.top    + padding.top,\n        right  = margin.right  + padding.right,\n        bottom = margin.bottom + padding.bottom,\n        left   = margin.left   + padding.left;\n    let ref = useRef(),\n        { dataSet } = props,\n        xIndex = 1,\n        yIndex = 0,\n        xLabel = Data.getColumnNames( dataSet )[ xIndex ],\n        yLabel = Data.getColumnNames( dataSet )[ yIndex ],\n        data = Data.getValues( dataSet ),\n        xDomain0 = [ d3.min( data, d => d[ xIndex ]), d3.max( data, d => d[ xIndex ])],\n        yDomain0,\n        xScale,\n        yScale,\n        histogram,\n        bins,\n        tiles;\n        \n    // Get the X scale.\n    const [ xDomain, setXDomain ] = useState( xDomain0 );\n    xScale = d3.scaleLinear().domain( xDomain ).range([ left, width - right ]);\n    \n    // Get the unique Y values.\n    let values = Array.from( d3.rollup( data, v => v.length, d => d[ yIndex ]));\n    values.sort(( a, b ) => ( b[ 1 ] - a[ 1 ]));\n    yDomain0 = values.map( x => x[ yIndex ]);\n        \n    // Get the Y scale.\n    const [ yDomain, setYDomain ] = useState( yDomain0 );\n    yScale = d3.scaleBand().domain( yDomain ).range([ height - bottom, top ]);\n    \n    // Assign the X aggregate factor.\n    const [ xAggregate, setXAggregate ] = useState( 0.5 );\n    let onXAggregate = ( event, value ) => {\n        setXDomain( xScale.domain());\n        setXAggregate( value );\n    };\n    \n    // Assign the Y aggregate factor.\n    const [ yAggregate, setYAggregate ] = useState( 0 );\n    let onYAggregate = ( event, value ) => {\n        setYDomain( yScale.domain());\n        setYAggregate( value );\n    };\n\n    // Calculate the X bins.\n    histogram = d3.histogram()\n        .value( d => d[ 1 ])\n        .domain( xDomain0 )\n        .thresholds( Math.round( Math.exp( 5 * ( 1 - xAggregate ))));\n    bins = histogram( data );\n    \n    // Count the number of values in each tile.\n    tiles = [];\n    bins.forEach(( bin ) => {\n        let t = [];\n        for( let i = 0; ( i < yDomain0.length ); i++ ) {\n            t[ i ] = 0;\n        }\n        bin.forEach(( b ) => {\n            let k = yDomain0.indexOf( b[ 0 ]);\n            t[ k ]++;\n        })\n        tiles = tiles.concat( t );\n    });\n    \n    // Combine tiles if requested.\n    let n = Math.round( yAggregate * yDomain0.length );\n    if( 0 < n ) {\n        for( let j = bins.length; ( j > 0 ); j-- ) {\n            let total = 0;\n            for( let i = 1; ( i <= n ); i++ ) {\n                total += tiles[ j * yDomain0.length - i ];\n            }\n            tiles.splice( j * yDomain0.length - n, n, total );\n        }\n        yDomain0.splice( yDomain0.length - n, n, \"Other\" );\n    }\n    \n    // Assign the Y domain.\n    yScale.domain( yDomain0 );\n        \n    // Zoom in two dimensions.\n    let onZoom2D = ( isIn ) => {\n        Graph.onZoom2D( isIn, xScale, yScale, xDomain0, yDomain0, false, true );\n        Heatmap.draw( ref, width, height, margin, padding, false, true, true, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins, tiles );\n    };\n    \n    // Zoom in one dimension.\n    let onMouseDown = ( event ) => {\n        Graph.onMouseDown( event, width, height, margin, padding, 0, xScale, yScale, xDomain0, yDomain0 );\n    },\n    onMouseUp = ( event ) => {\n        if( Graph.downLocation.isX || Graph.downLocation.isY ) {\n            let xUp = event.nativeEvent.offsetX,\n                yUp = event.nativeEvent.offsetY,\n                isBinning = (( 0 <= xUp ) && ( xUp < width ) && ( 0 <= yUp ) && ( yUp < height ));\n            Graph.onMouseUp( ref, event, width, height, margin, padding, xScale, yScale, xDomain0, yDomain0 );\n            Heatmap.draw( ref, width, height, margin, padding, false, isBinning, isBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins, tiles );\n        }\n    };\n    \n    // Show or hide the controls.\n    let onMouseOver = ( event ) => {\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, true, true, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    let onMouseOut = ( event ) => {\n        let xUp = event.nativeEvent.offsetX,\n            yUp = event.nativeEvent.offsetY,\n            isBinning = (( 0 <= xUp ) && ( xUp < width ) && ( 0 <= yUp ) && ( yUp < height ));\n        Graph.drawControls( ref, width, height, margin, padding, 0, false, false, isBinning, isBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    };\n    \n    // Set hook to draw on mounting or any state change.\n    useEffect(() => {\n        Heatmap.draw( ref, width, height, margin, padding, Graph.isZooming( ref ), Graph.isXBinning( ref ), Graph.isYBinning( ref ), xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins, tiles );\n    });\n    \n    // Return the component.\n    return <Graph width={width} height={height} margin={margin} padding={padding}\n        onZoom={onZoom2D} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseOver={onMouseOver} onMouseOut={onMouseOut}\n            xAggregate={0.5} yAggregate={0} onXAggregate={onXAggregate} onYAggregate={onYAggregate} ref={ref} />\n};\n\n/**\n * Draws the heat map.\n *\n * @param  {Object}   ref          reference to DIV\n * @param  {number}   width        width, in pixels\n * @param  {number}   height       height, in pixels\n * @param  {Box}      margin       margin\n * @param  {Box}      padding      padding\n * @param  {boolean}  isZooming    true if drawing zoom controls\n * @param  {boolean}  isXBinning   true iff drawing bin controls in X dimension\n * @param  {boolean}  isYBinning   true iff drawing bin controls in Y dimension\n * @param  {D3Scale}  xScale       X scale\n * @param  {D3Scale}  yScale       Y scale\n * @param  {Array}    xDomain0     Initial X domain\n * @param  {Array}    yDomain0     Initial Y domain\n * @param  {string}   xLabel       X axis label\n * @param  {string}   yLabel       Y axis label\n * @param  {Array}    bins         bins\n * @param  {number[]} tiles        tiles\n */\nHeatmap.draw = ( ref, width, height, margin, padding, isZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel, bins, tiles ) => {\n    \n    // Initialization.\n    const svg = d3.select( ref.current.childNodes[ 0 ]);\n    svg.selectAll( \"*\" ).remove();\n\n    // Draw the tiles.\n    const nY = yDomain0.length;\n    let colorScale = d3.scaleLinear().domain([ 0, d3.max( tiles, t => t )]).range([ \"#99bbdd\", \"#ff0000\" ]);\n    svg.selectAll( \"rect\" )\n        .data( tiles )\n        .enter()\n        .append( \"rect\" )\n        .attr( \"x\", ( d, i ) => xScale( bins[( i / nY ) >> 0 ].x0 ))\n        .attr( \"y\", ( d, i ) => yScale( yDomain0[ i % nY ]) + 1 )\n        .attr( \"width\", ( d, i ) => xScale( bins[( i / nY ) >> 0 ].x1 ) - xScale( bins[( i / nY ) >> 0 ].x0 ) - 1 )\n        .attr( \"height\", ( d ) => ( d > 0 ) ? yScale.bandwidth() - 1 : 0 )\n        .style( \"fill\", ( d ) => colorScale( d ));\n        \n    // Draw the axes and the controls.\n    Graph.drawAxes(     ref, width, height, margin, padding, 0, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n    Graph.drawControls( ref, width, height, margin, padding, 0, isZooming, isZooming, isXBinning, isYBinning, xScale, yScale, xDomain0, yDomain0, xLabel, yLabel );\n};\n\nexport default Heatmap;\n","export default __webpack_public_path__ + \"static/media/shneiderman.6b541fe6.png\";","import React from 'react';\nimport Histogram from './Histogram';\nimport BarChart from './BarChart';\nimport Heatmap from './Heatmap';\nimport './App.css';\nimport shneiderman from './shneiderman.png';\n\n// Application:  Dynamic Binning\nconst App = () => {\n    \n    // Return the App.\n    return (\n        <div className=\"Column\">\n            <div className=\"Description\">\n                <h1>Dynamic Binning</h1>\n                <p>\n                <a href=\"https://www.cs.umd.edu/users/ben/\">Ben Shneiderman</a> taught us all to <a href=\"https://www.cs.umd.edu/~ben/papers/Shneiderman1996eyes.pdf\">\"Overview first, zoom and filter, then details-on-demand\"</a>.\n                </p>\n                <a href=\"https://www.cs.umd.edu/users/ben/\"><img alt=\"Dr. Ben Shneiderman\" src={shneiderman}/></a>\n                <p>\n                Does \"zooming\" include binning?  In aggregate graphs, adjusting scales may not help us explore the data.  However, adjusting bins often can.\n                </p>\n                <p>\n                Hover over the graphs below to see the binning controls.  Use the sliders to adjust the bins.\n                </p>\n                <h2>Continuous Data</h2>\n                <p>\n                For continuous data sets, a slider control on the axis affords adjustment of the bins.  In the histogram below, for example, there is one prominent peak at the center of the distribution.  Decreasing the bin size reveals a second peak on the right.\n                </p>\n            </div>\n            <div className=\"Graph\">\n                <Histogram dataSet={ \"Cytometry\" } />\n            </div>\n            <div className=\"Description\">\n                <h2>Categorical Data</h2>\n                <p>\n                Categorical data presents a different problem.  When there are many categories, the smaller ones can be usefully combined into an \"Other\" category.  This clarifies the largest categories -- the \"Top 5\", \"Top 10\", or however many the user desires.\n                </p>\n                <p>\n                \"Other\" bins have been used for many years.  With a modern user interface, we can make them interactively adjustable and efficient for the user.  This is particularly useful when exploring \"long-tailed\" distributions, as in the bar chart below.\n                </p>\n            </div>\n            <div className=\"Graph\">\n                <BarChart dataSet={ \"Sales\" } />\n            </div>\n            <div className=\"Description\">\n                <h2>Multiple Dimensions</h2>\n                <p>\n                This user interface extends readily to multiple dimensions.   The heatmap below demonstrates continuous and categorical binning in two dimensions.\n                </p>\n            </div>\n            <div className=\"Graph\">\n                <Heatmap dataSet={ \"Food\" } />\n            </div>\n            <div className=\"Description\">\n                <h2>About this Design</h2>\n                <p>\n                Affordances are visible.  The user can see the binning controls.\n                </p>\n                <p>\n                To minimize distraction from the data display, controls are displayed only when they can be used.\n                </p>\n                <p>\n                An alternative design using a hand (\"grabber\") cursor on the data display was considered, but usability tests showed the slider control is easier to learn.  The slider is positioned along the axis to afford direct manipulation of that dimension and to conserve screen real estate.\n                </p>\n            </div>\n            <a href=\"https://github.com/hemanrobinson/zoom/\">Code Shared on GitHub</a>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Render the app.\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById( 'root' )\n);\n"],"sourceRoot":""}